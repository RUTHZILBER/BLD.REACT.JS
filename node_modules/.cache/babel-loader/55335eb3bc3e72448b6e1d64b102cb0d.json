{"ast":null,"code":"var _jsxFileName = \"C:\\\\BLD\\\\BLD.REACT.JS\\\\src\\\\SearchTextBox.js\",\n    _s = $RefreshSig$();\n\n// תיבת הטקסט של האיתור המשופר\nimport { React, useState, Component, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListItem from './ListItems.js';\nimport { connect } from 'react-redux';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction mapStateToProps(state) {\n  return {\n    userId: state.UserId,\n    comment: state.Comment\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 237\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\nexport default connect(mapStateToProps)(_s(function SearchTextBox(props) {\n  _s();\n\n  const [vis, setVis] = useState(\"none\");\n  const [visx, setVisx] = useState(\"\");\n  const {\n    rows,\n    setRows,\n    dis,\n    setDis,\n    text,\n    setText,\n    userId,\n    errorPlay,\n    setErrorPlay,\n    comment,\n    severity,\n    setSeverity,\n    alertContent,\n    setAlertContent\n  } = props;\n  const [searchesArray, setSearchesArray] = useState([]);\n\n  function showError() {\n    //למשך 10 שניות הצגת ההודעה\n    setTimeout(function () {\n      setErrorPlay(\"none\");\n    }.bind(this), 5000);\n    setErrorPlay(\"\");\n  } //פונקציה לשליחת תוכן תיבת הטקסט, וקבלת רשימת השירים שנמצאו\n\n\n  function getSearches() {\n    var json4 = JSON.stringify({\n      State: comment,\n      Text: text,\n      usrId: userId\n    }); // זה \n\n    fetch(\"http://localhost:62135/api/values/getMatchSongsList\", {\n      method: \"post\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: json4\n    }).then(res => res.json()).then(res => {\n      if (res.Status == true) {\n        // alert(res.Message);\n        debugger;\n        setSeverity(\"info\"); //info, warning, success,error\n\n        setAlertContent(res.Message);\n        var arr = res.Data;\n        var cloneArray = [...searchesArray];\n        cloneArray = cloneArray.concat(arr);\n        setSearchesArray(cloneArray);\n        setDis(\"\");\n        showError();\n      } else {\n        setSeverity(\"error\"); //info, warning, success,error\n\n        setAlertContent(res.Message);\n        showError();\n      }\n    }, err => {\n      {\n        setSeverity(\"error\"); //info, warning, success,error\n\n        setAlertContent(\"שגיאה\");\n        showError();\n      }\n    });\n    setDis(\"\");\n  }\n\n  const classes = useStyles();\n\n  function handleText(e) {\n    var cloneText = text;\n    cloneText = e.target.value;\n    debugger;\n    setText(cloneText);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"form\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          if (dis == \"\") {\n            setDis(\"none\");\n            setVis(\"\");\n            setVisx(\"none\");\n          } else {\n            setDis(\"\");\n            setVis(\"none\");\n            setVisx(\"\");\n          }\n        },\n        className: classes.iconButton,\n        \"aria-label\": \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(VisibilityOffIcon, {\n          style: {\n            display: visx\n          },\n          display: visx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VisibilityIcon, {\n          style: {\n            display: vis\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        value: text,\n        onChange: e => handleText(e),\n        className: classes.input,\n        placeholder: \" \\u05D0\\u05D9\\u05EA\\u05D5\\u05E8 \",\n        inputProps: {\n          'aria-label': 'search google maps'\n        },\n        dir: \"rtl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: getSearches,\n        className: classes.iconButton,\n        \"aria-label\": \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider,\n        orientation: \"vertical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        searchesArray: searchesArray,\n        setSearchesArray: setSearchesArray,\n        dis: dis,\n        setDis: setDis,\n        rows: rows,\n        setRows: setRows,\n        style: {\n          display: \"absolute\",\n          top: \"300px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}, \"en1/ICLaKwfffgFRQ9y/ndLvyBI=\", false, function () {\n  return [useStyles];\n}));","map":{"version":3,"sources":["C:/BLD/BLD.REACT.JS/src/SearchTextBox.js"],"names":["React","useState","Component","useEffect","useRef","makeStyles","Paper","InputBase","Divider","IconButton","MenuIcon","SearchIcon","ListItem","connect","VisibilityIcon","VisibilityOffIcon","mapStateToProps","state","userId","UserId","comment","Comment","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","SearchTextBox","props","vis","setVis","visx","setVisx","rows","setRows","dis","setDis","text","setText","errorPlay","setErrorPlay","severity","setSeverity","alertContent","setAlertContent","searchesArray","setSearchesArray","showError","setTimeout","bind","getSearches","json4","JSON","stringify","State","Text","usrId","fetch","method","headers","body","then","res","json","Status","Message","arr","Data","cloneArray","concat","err","classes","handleText","e","cloneText","target","value","top"],"mappings":"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","sourcesContent":["// תיבת הטקסט של האיתור המשופר\r\nimport { React, useState, Component, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ListItem from './ListItems.js';\r\nimport { connect } from 'react-redux';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userId: state.UserId,\r\n        comment: state.Comment\r\n\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 237,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    divider: {\r\n        height: 28,\r\n        margin: 4,\r\n    },\r\n}));\r\nexport default connect(mapStateToProps)(function SearchTextBox(props) {\r\n    const [vis, setVis] = useState(\"none\");\r\n    const [visx, setVisx] = useState(\"\");\r\n    const { rows, setRows, dis, setDis, text, setText, userId, errorPlay, setErrorPlay, comment, severity, setSeverity, alertContent, setAlertContent, } = props;\r\n\r\n    const [searchesArray, setSearchesArray] = useState([]);\r\n    function showError() {\r\n\r\n        //למשך 10 שניות הצגת ההודעה\r\n        setTimeout(function () {\r\n            setErrorPlay(\"none\");\r\n\r\n        }.bind(this), 5000);\r\n\r\n        setErrorPlay(\"\");\r\n    }\r\n\r\n    //פונקציה לשליחת תוכן תיבת הטקסט, וקבלת רשימת השירים שנמצאו\r\n    function getSearches() {\r\n        var json4 = JSON.stringify({ State: comment, Text: text, usrId: userId });// זה \r\n        fetch(\"http://localhost:62135/api/values/getMatchSongsList\", {\r\n            method: \"post\",\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: json4\r\n        })\r\n            .then(res => res.json())\r\n\r\n            .then((res) => {\r\n                if (res.Status == true) {\r\n                    // alert(res.Message);\r\n                    debugger;\r\n\r\n                    setSeverity(\"info\");\r\n                    //info, warning, success,error\r\n                    setAlertContent(res.Message);\r\n\r\n                    var arr = res.Data;\r\n                    var cloneArray = [...searchesArray];\r\n                    cloneArray = cloneArray.concat(arr);\r\n                    setSearchesArray(cloneArray);\r\n                    setDis(\"\");\r\n                    showError();\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    setSeverity(\"error\");\r\n                    //info, warning, success,error\r\n                    setAlertContent(res.Message);\r\n                    showError();\r\n\r\n                }\r\n\r\n            },\r\n                (err) => {\r\n                    {\r\n                        setSeverity(\"error\");\r\n                        //info, warning, success,error\r\n                        setAlertContent(\"שגיאה\");\r\n                        showError()\r\n                    }\r\n                })\r\n        setDis(\"\");\r\n\r\n    }\r\n    const classes = useStyles();\r\n\r\n\r\n    function handleText(e) {\r\n        var cloneText = text;\r\n        cloneText = e.target.value;\r\n        debugger;\r\n        setText(cloneText);\r\n    }\r\n    return (\r\n        <>\r\n\r\n\r\n            <Paper component=\"form\" className={classes.root}>\r\n\r\n                <IconButton onClick={() => {\r\n                    if (dis == \"\") {\r\n                        setDis(\"none\");\r\n                        setVis(\"\");\r\n                        setVisx(\"none\")\r\n                    }\r\n\r\n                    else {\r\n                        setDis(\"\");\r\n                        setVis(\"none\");\r\n                        setVisx(\"\")\r\n                    }\r\n\r\n\r\n                }} className={classes.iconButton} aria-label=\"menu\">\r\n\r\n                    {/* העין העצומה  /> */}\r\n                    < VisibilityOffIcon style={{ display: visx }} display={visx} />\r\n                    {/* העין הפקוחה */}\r\n                    <VisibilityIcon style={{ display: vis }} />\r\n                </IconButton>\r\n                {/* תיבת הטקסט ובתוכה מילות השיר לאיתור */}\r\n                <InputBase\r\n\r\n                    value={text}\r\n                    onChange={(e) => handleText(e)}\r\n                    className={classes.input}\r\n                    placeholder=\" איתור \"\r\n                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                    dir=\"rtl\"\r\n                />\r\n\r\n\r\n                <IconButton onClick={getSearches} className={classes.iconButton} aria-label=\"search\">\r\n                    {/* איקון החיפוש */}\r\n                    <SearchIcon />\r\n\r\n                </IconButton>\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n\r\n                {/* רשימת  השירים */}\r\n                <ListItem searchesArray={searchesArray} setSearchesArray={setSearchesArray} dis={dis} setDis={setDis} rows={rows} setRows={setRows} style={{ display: \"absolute\", top: \"300px\" }}></ListItem>\r\n            </Paper>\r\n        </>\r\n    );\r\n})"]},"metadata":{},"sourceType":"module"}