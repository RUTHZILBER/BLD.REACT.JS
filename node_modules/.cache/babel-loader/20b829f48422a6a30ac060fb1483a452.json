{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType, elementTypeAcceptingRef, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport TextareaAutosize from '../TextareaAutosize';\nimport GlobalStyles from '../GlobalStyles';\nimport { isFilled } from './utils';\nimport inputBaseClasses, { getInputBaseUtilityClass } from './inputBaseClasses';\nexport const overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.formControl && styles.formControl, styleProps.startAdornment && styles.adornedStart, styleProps.endAdornment && styles.adornedEnd, styleProps.error && styles.error, styleProps.size === 'small' && styles.sizeSmall, styleProps.multiline && styles.multiline, styleProps.color && styles[`color${capitalize(styleProps.color)}`], styleProps.fullWidth && styles.fullWidth, styleProps.hiddenLabel && styles.hiddenLabel, {\n    [`& .${inputBaseClasses.input}`]: _extends({}, styles.input, styleProps.size === 'small' && styles.inputSizeSmall, styleProps.multiline && styles.inputMultiline, styleProps.type === 'search' && styles.inputTypeSearch, styleProps.startAdornment && styles.inputAdornedStart, styleProps.endAdornment && styles.inputAdornedEnd, styleProps.hiddenLabel && styles.inputHiddenLabel)\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color,\n    disabled,\n    error,\n    endAdornment,\n    focused,\n    formControl,\n    fullWidth,\n    hiddenLabel,\n    multiline,\n    size,\n    startAdornment,\n    type\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', fullWidth && 'fullWidth', focused && 'focused', formControl && 'formControl', size === 'small' && 'sizeSmall', multiline && 'multiline', startAdornment && 'adornedStart', endAdornment && 'adornedEnd', hiddenLabel && 'hiddenLabel'],\n    input: ['input', disabled && 'disabled', type === 'search' && 'inputTypeSearch', multiline && 'inputMultiline', size === 'small' && 'inputSizeSmall', hiddenLabel && 'inputHiddenLabel', startAdornment && 'inputAdornedStart', endAdornment && 'inputAdornedEnd']\n  };\n  return composeClasses(slots, getInputBaseUtilityClass, classes);\n};\n\nexport const InputBaseRoot = experimentalStyled('div', {}, {\n  name: 'MuiInputBase',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({}, theme.typography.body1, {\n  color: theme.palette.text.primary,\n  lineHeight: '1.4375em',\n  // 23px\n  boxSizing: 'border-box',\n  // Prevent padding issue with fullWidth.\n  position: 'relative',\n  cursor: 'text',\n  display: 'inline-flex',\n  alignItems: 'center',\n  '&.Mui-disabled': {\n    color: theme.palette.text.disabled,\n    cursor: 'default'\n  }\n}, styleProps.multiline && _extends({\n  padding: '4px 0 5px'\n}, styleProps.size === 'small' && {\n  paddingTop: 1\n}), styleProps.fullWidth && {\n  width: '100%'\n}));\nexport const InputBaseComponent = experimentalStyled('input', {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiInputBase',\n  slot: 'Input'\n})(({\n  theme,\n  styleProps\n}) => {\n  const light = theme.palette.mode === 'light';\n  const placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  const placeholderHidden = {\n    opacity: '0 !important'\n  };\n  const placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return _extends({\n    font: 'inherit',\n    letterSpacing: 'inherit',\n    color: 'currentColor',\n    padding: '4px 0 5px',\n    border: 0,\n    boxSizing: 'content-box',\n    background: 'none',\n    height: '1.4375em',\n    // Reset 23pxthe native input line-height\n    margin: 0,\n    // Reset for Safari\n    WebkitTapHighlightColor: 'transparent',\n    display: 'block',\n    // Make the flex item shrink with Firefox\n    minWidth: 0,\n    width: '100%',\n    // Fix IE11 width issue\n    animationName: 'mui-auto-fill-cancel',\n    animationDuration: '10ms',\n    '&::-webkit-input-placeholder': placeholder,\n    '&::-moz-placeholder': placeholder,\n    // Firefox 19+\n    '&:-ms-input-placeholder': placeholder,\n    // IE11\n    '&::-ms-input-placeholder': placeholder,\n    // Edge\n    '&:focus': {\n      outline: 0\n    },\n    // Reset Firefox invalid required input style\n    '&:invalid': {\n      boxShadow: 'none'\n    },\n    '&::-webkit-search-decoration': {\n      // Remove the padding when type=search.\n      WebkitAppearance: 'none'\n    },\n    // Show and hide the placeholder logic\n    [`label[data-shrink=false] + .${inputBaseClasses.formControl} &`]: {\n      '&::-webkit-input-placeholder': placeholderHidden,\n      '&::-moz-placeholder': placeholderHidden,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholderHidden,\n      // IE11\n      '&::-ms-input-placeholder': placeholderHidden,\n      // Edge\n      '&:focus::-webkit-input-placeholder': placeholderVisible,\n      '&:focus::-moz-placeholder': placeholderVisible,\n      // Firefox 19+\n      '&:focus:-ms-input-placeholder': placeholderVisible,\n      // IE11\n      '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n    },\n    '&.Mui-disabled': {\n      opacity: 1,\n      // Reset iOS opacity\n      WebkitTextFillColor: theme.palette.text.disabled // Fix opacity Safari bug\n\n    },\n    '&:-webkit-auto-fill': {\n      animationDuration: '5000s',\n      animationName: 'mui-auto-fill'\n    }\n  }, styleProps.size === 'small' && {\n    paddingTop: 1\n  }, styleProps.multiline && {\n    height: 'auto',\n    resize: 'none',\n    padding: 0\n  }, styleProps.type === 'search' && {\n    // Improve type search style.\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'textfield'\n  });\n});\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nconst InputBase = /*#__PURE__*/React.forwardRef(function InputBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputBase'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    autoComplete,\n    autoFocus,\n    className,\n    components = {},\n    componentsProps = {},\n    defaultValue,\n    disabled,\n    endAdornment,\n    fullWidth = false,\n    id,\n    inputComponent = 'input',\n    inputProps: inputPropsProp = {},\n    inputRef: inputRefProp,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    placeholder,\n    readOnly,\n    renderSuffix,\n    rows,\n    startAdornment,\n    type = 'text',\n    value: valueProp,\n\n    /* eslint-disable-next-line react/prop-types */\n    theme\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"className\", \"color\", \"components\", \"componentsProps\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"size\", \"startAdornment\", \"type\", \"value\", \"isRtl\", \"theme\"]);\n\n  const value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef();\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  const handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  const handleInputRef = useForkRef(inputRef, handleInputRefProp);\n  const [focused, setFocused] = React.useState(false);\n  const muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'size', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  const onFilled = muiFormControl && muiFormControl.onFilled;\n  const onEmpty = muiFormControl && muiFormControl.onEmpty;\n  const checkDirty = React.useCallback(obj => {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(() => {\n    if (isControlled) {\n      checkDirty({\n        value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  const handleFocus = event => {\n    // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = (event, ...args) => {\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: Expected valid input target. Did you use a custom \\`inputComponent\\` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange(event, ...args);\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange(event, ...args);\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(() => {\n    checkDirty(inputRef.current); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  let InputComponent = inputComponent;\n  let inputProps = inputPropsProp;\n\n  if (multiline && InputComponent === 'input') {\n    if (rows) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (minRows || maxRows) {\n          console.warn('Material-UI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');\n        }\n      }\n\n      inputProps = _extends({\n        type: undefined\n      }, inputProps);\n      InputComponent = 'textarea';\n    } else {\n      inputProps = _extends({\n        type: undefined,\n        maxRows,\n        minRows\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  }\n\n  const handleAutoFill = event => {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(() => {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n\n  const styleProps = _extends({}, props, {\n    color: fcs.color || 'primary',\n    disabled: fcs.disabled,\n    endAdornment,\n    error: fcs.error,\n    focused: fcs.focused,\n    formControl: muiFormControl,\n    fullWidth,\n    hiddenLabel: fcs.hiddenLabel,\n    multiline,\n    size: fcs.size,\n    startAdornment,\n    type\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const Root = components.Root || InputBaseRoot;\n  const rootProps = componentsProps.root || {};\n  const Input = components.Input || InputBaseComponent;\n  inputProps = _extends({}, inputProps, componentsProps.input);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    styles: {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    }\n  }), /*#__PURE__*/React.createElement(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n    styleProps: _extends({}, styleProps, rootProps.styleProps),\n    theme\n  }, {\n    ref: ref,\n    onClick: handleClick\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className)\n  }), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Input, _extends({\n    styleProps: styleProps,\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    type: type\n  }, inputProps, !isHostComponent(Input) && {\n    as: InputComponent,\n    styleProps: _extends({}, styleProps, inputProps.styleProps),\n    theme\n  }, {\n    ref: handleInputRef,\n    className: clsx(classes.input, inputProps.className, inputPropsProp.className),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment\n  })) : null));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Input: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the `input` will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: elementTypeAcceptingRef,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the `input` is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default InputBase;","map":{"version":3,"sources":["C:/BLD/BLD.REACT.JS/node_modules/@material-ui/core/InputBase/InputBase.js"],"names":["_objectWithoutPropertiesLoose","_extends","formatMuiErrorMessage","_formatMuiErrorMessage","React","PropTypes","clsx","refType","elementTypeAcceptingRef","deepmerge","unstable_composeClasses","composeClasses","isHostComponent","formControlState","FormControlContext","useFormControl","experimentalStyled","shouldForwardProp","useThemeProps","capitalize","useForkRef","useEnhancedEffect","TextareaAutosize","GlobalStyles","isFilled","inputBaseClasses","getInputBaseUtilityClass","overridesResolver","props","styles","styleProps","formControl","startAdornment","adornedStart","endAdornment","adornedEnd","error","size","sizeSmall","multiline","color","fullWidth","hiddenLabel","input","inputSizeSmall","inputMultiline","type","inputTypeSearch","inputAdornedStart","inputAdornedEnd","inputHiddenLabel","root","useUtilityClasses","classes","disabled","focused","slots","InputBaseRoot","name","slot","theme","typography","body1","palette","text","primary","lineHeight","boxSizing","position","cursor","display","alignItems","padding","paddingTop","width","InputBaseComponent","prop","light","mode","placeholder","opacity","transition","transitions","create","duration","shorter","placeholderHidden","placeholderVisible","font","letterSpacing","border","background","height","margin","WebkitTapHighlightColor","minWidth","animationName","animationDuration","outline","boxShadow","WebkitAppearance","WebkitTextFillColor","resize","MozAppearance","InputBase","forwardRef","inProps","ref","ariaDescribedby","autoComplete","autoFocus","className","components","componentsProps","defaultValue","id","inputComponent","inputProps","inputPropsProp","inputRef","inputRefProp","maxRows","minRows","onBlur","onChange","onClick","onFocus","onKeyDown","onKeyUp","readOnly","renderSuffix","rows","value","valueProp","other","current","isControlled","useRef","handleInputRefWarning","useCallback","instance","process","env","NODE_ENV","nodeName","focus","console","join","handleInputPropsRefProp","handleInputRefProp","handleInputRef","setFocused","useState","muiFormControl","useEffect","registerEffect","undefined","fcs","states","onFilled","onEmpty","checkDirty","obj","handleFocus","event","stopPropagation","handleBlur","handleChange","args","element","target","Error","handleClick","currentTarget","InputComponent","warn","handleAutoFill","setAdornedStart","Boolean","Root","rootProps","Input","createElement","Fragment","Provider","onAnimationStart","required","as","propTypes","string","bool","object","oneOf","shape","elementType","any","node","oneOfType","number","func","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType, elementTypeAcceptingRef, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport experimentalStyled, { shouldForwardProp } from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport TextareaAutosize from '../TextareaAutosize';\nimport GlobalStyles from '../GlobalStyles';\nimport { isFilled } from './utils';\nimport inputBaseClasses, { getInputBaseUtilityClass } from './inputBaseClasses';\nexport const overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.formControl && styles.formControl, styleProps.startAdornment && styles.adornedStart, styleProps.endAdornment && styles.adornedEnd, styleProps.error && styles.error, styleProps.size === 'small' && styles.sizeSmall, styleProps.multiline && styles.multiline, styleProps.color && styles[`color${capitalize(styleProps.color)}`], styleProps.fullWidth && styles.fullWidth, styleProps.hiddenLabel && styles.hiddenLabel, {\n    [`& .${inputBaseClasses.input}`]: _extends({}, styles.input, styleProps.size === 'small' && styles.inputSizeSmall, styleProps.multiline && styles.inputMultiline, styleProps.type === 'search' && styles.inputTypeSearch, styleProps.startAdornment && styles.inputAdornedStart, styleProps.endAdornment && styles.inputAdornedEnd, styleProps.hiddenLabel && styles.inputHiddenLabel)\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color,\n    disabled,\n    error,\n    endAdornment,\n    focused,\n    formControl,\n    fullWidth,\n    hiddenLabel,\n    multiline,\n    size,\n    startAdornment,\n    type\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', fullWidth && 'fullWidth', focused && 'focused', formControl && 'formControl', size === 'small' && 'sizeSmall', multiline && 'multiline', startAdornment && 'adornedStart', endAdornment && 'adornedEnd', hiddenLabel && 'hiddenLabel'],\n    input: ['input', disabled && 'disabled', type === 'search' && 'inputTypeSearch', multiline && 'inputMultiline', size === 'small' && 'inputSizeSmall', hiddenLabel && 'inputHiddenLabel', startAdornment && 'inputAdornedStart', endAdornment && 'inputAdornedEnd']\n  };\n  return composeClasses(slots, getInputBaseUtilityClass, classes);\n};\n\nexport const InputBaseRoot = experimentalStyled('div', {}, {\n  name: 'MuiInputBase',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({}, theme.typography.body1, {\n  color: theme.palette.text.primary,\n  lineHeight: '1.4375em',\n  // 23px\n  boxSizing: 'border-box',\n  // Prevent padding issue with fullWidth.\n  position: 'relative',\n  cursor: 'text',\n  display: 'inline-flex',\n  alignItems: 'center',\n  '&.Mui-disabled': {\n    color: theme.palette.text.disabled,\n    cursor: 'default'\n  }\n}, styleProps.multiline && _extends({\n  padding: '4px 0 5px'\n}, styleProps.size === 'small' && {\n  paddingTop: 1\n}), styleProps.fullWidth && {\n  width: '100%'\n}));\nexport const InputBaseComponent = experimentalStyled('input', {\n  shouldForwardProp: prop => shouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiInputBase',\n  slot: 'Input'\n})(({\n  theme,\n  styleProps\n}) => {\n  const light = theme.palette.mode === 'light';\n  const placeholder = {\n    color: 'currentColor',\n    opacity: light ? 0.42 : 0.5,\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n  const placeholderHidden = {\n    opacity: '0 !important'\n  };\n  const placeholderVisible = {\n    opacity: light ? 0.42 : 0.5\n  };\n  return _extends({\n    font: 'inherit',\n    letterSpacing: 'inherit',\n    color: 'currentColor',\n    padding: '4px 0 5px',\n    border: 0,\n    boxSizing: 'content-box',\n    background: 'none',\n    height: '1.4375em',\n    // Reset 23pxthe native input line-height\n    margin: 0,\n    // Reset for Safari\n    WebkitTapHighlightColor: 'transparent',\n    display: 'block',\n    // Make the flex item shrink with Firefox\n    minWidth: 0,\n    width: '100%',\n    // Fix IE11 width issue\n    animationName: 'mui-auto-fill-cancel',\n    animationDuration: '10ms',\n    '&::-webkit-input-placeholder': placeholder,\n    '&::-moz-placeholder': placeholder,\n    // Firefox 19+\n    '&:-ms-input-placeholder': placeholder,\n    // IE11\n    '&::-ms-input-placeholder': placeholder,\n    // Edge\n    '&:focus': {\n      outline: 0\n    },\n    // Reset Firefox invalid required input style\n    '&:invalid': {\n      boxShadow: 'none'\n    },\n    '&::-webkit-search-decoration': {\n      // Remove the padding when type=search.\n      WebkitAppearance: 'none'\n    },\n    // Show and hide the placeholder logic\n    [`label[data-shrink=false] + .${inputBaseClasses.formControl} &`]: {\n      '&::-webkit-input-placeholder': placeholderHidden,\n      '&::-moz-placeholder': placeholderHidden,\n      // Firefox 19+\n      '&:-ms-input-placeholder': placeholderHidden,\n      // IE11\n      '&::-ms-input-placeholder': placeholderHidden,\n      // Edge\n      '&:focus::-webkit-input-placeholder': placeholderVisible,\n      '&:focus::-moz-placeholder': placeholderVisible,\n      // Firefox 19+\n      '&:focus:-ms-input-placeholder': placeholderVisible,\n      // IE11\n      '&:focus::-ms-input-placeholder': placeholderVisible // Edge\n\n    },\n    '&.Mui-disabled': {\n      opacity: 1,\n      // Reset iOS opacity\n      WebkitTextFillColor: theme.palette.text.disabled // Fix opacity Safari bug\n\n    },\n    '&:-webkit-auto-fill': {\n      animationDuration: '5000s',\n      animationName: 'mui-auto-fill'\n    }\n  }, styleProps.size === 'small' && {\n    paddingTop: 1\n  }, styleProps.multiline && {\n    height: 'auto',\n    resize: 'none',\n    padding: 0\n  }, styleProps.type === 'search' && {\n    // Improve type search style.\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'textfield'\n  });\n});\n/**\n * `InputBase` contains as few styles as possible.\n * It aims to be a simple building block for creating an input.\n * It contains a load of style reset and some state logic.\n */\n\nconst InputBase = /*#__PURE__*/React.forwardRef(function InputBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputBase'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    autoComplete,\n    autoFocus,\n    className,\n    components = {},\n    componentsProps = {},\n    defaultValue,\n    disabled,\n    endAdornment,\n    fullWidth = false,\n    id,\n    inputComponent = 'input',\n    inputProps: inputPropsProp = {},\n    inputRef: inputRefProp,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onClick,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    placeholder,\n    readOnly,\n    renderSuffix,\n    rows,\n    startAdornment,\n    type = 'text',\n    value: valueProp,\n\n    /* eslint-disable-next-line react/prop-types */\n    theme\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"autoComplete\", \"autoFocus\", \"className\", \"color\", \"components\", \"componentsProps\", \"defaultValue\", \"disabled\", \"endAdornment\", \"error\", \"fullWidth\", \"id\", \"inputComponent\", \"inputProps\", \"inputRef\", \"margin\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onKeyUp\", \"placeholder\", \"readOnly\", \"renderSuffix\", \"rows\", \"size\", \"startAdornment\", \"type\", \"value\", \"isRtl\", \"theme\"]);\n\n  const value = inputPropsProp.value != null ? inputPropsProp.value : valueProp;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef();\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['Material-UI: You have provided a `inputComponent` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const handleInputPropsRefProp = useForkRef(inputPropsProp.ref, handleInputRefWarning);\n  const handleInputRefProp = useForkRef(inputRefProp, handleInputPropsRefProp);\n  const handleInputRef = useForkRef(inputRef, handleInputRefProp);\n  const [focused, setFocused] = React.useState(false);\n  const muiFormControl = useFormControl();\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (muiFormControl) {\n        return muiFormControl.registerEffect();\n      }\n\n      return undefined;\n    }, [muiFormControl]);\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'disabled', 'error', 'hiddenLabel', 'size', 'required', 'filled']\n  });\n  fcs.focused = muiFormControl ? muiFormControl.focused : focused; // The blur won't fire when the disabled state is set on a focused input.\n  // We need to book keep the focused state manually.\n\n  React.useEffect(() => {\n    if (!muiFormControl && disabled && focused) {\n      setFocused(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [muiFormControl, disabled, focused, onBlur]);\n  const onFilled = muiFormControl && muiFormControl.onFilled;\n  const onEmpty = muiFormControl && muiFormControl.onEmpty;\n  const checkDirty = React.useCallback(obj => {\n    if (isFilled(obj)) {\n      if (onFilled) {\n        onFilled();\n      }\n    } else if (onEmpty) {\n      onEmpty();\n    }\n  }, [onFilled, onEmpty]);\n  useEnhancedEffect(() => {\n    if (isControlled) {\n      checkDirty({\n        value\n      });\n    }\n  }, [value, checkDirty, isControlled]);\n\n  const handleFocus = event => {\n    // Fix a bug with IE11 where the focus/blur events are triggered\n    // while the component is disabled.\n    if (fcs.disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (inputPropsProp.onFocus) {\n      inputPropsProp.onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    } else {\n      setFocused(true);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (inputPropsProp.onBlur) {\n      inputPropsProp.onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    } else {\n      setFocused(false);\n    }\n  };\n\n  const handleChange = (event, ...args) => {\n    if (!isControlled) {\n      const element = event.target || inputRef.current;\n\n      if (element == null) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: Expected valid input target. Did you use a custom \\`inputComponent\\` and forget to forward refs? See https://material-ui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(1));\n      }\n\n      checkDirty({\n        value: element.value\n      });\n    }\n\n    if (inputPropsProp.onChange) {\n      inputPropsProp.onChange(event, ...args);\n    } // Perform in the willUpdate\n\n\n    if (onChange) {\n      onChange(event, ...args);\n    }\n  }; // Check the input state on mount, in case it was filled by the user\n  // or auto filled by the browser before the hydration (for SSR).\n\n\n  React.useEffect(() => {\n    checkDirty(inputRef.current); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = event => {\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  let InputComponent = inputComponent;\n  let inputProps = inputPropsProp;\n\n  if (multiline && InputComponent === 'input') {\n    if (rows) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (minRows || maxRows) {\n          console.warn('Material-UI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.');\n        }\n      }\n\n      inputProps = _extends({\n        type: undefined\n      }, inputProps);\n      InputComponent = 'textarea';\n    } else {\n      inputProps = _extends({\n        type: undefined,\n        maxRows,\n        minRows\n      }, inputProps);\n      InputComponent = TextareaAutosize;\n    }\n  }\n\n  const handleAutoFill = event => {\n    // Provide a fake value as Chrome might not let you access it for security reasons.\n    checkDirty(event.animationName === 'mui-auto-fill-cancel' ? inputRef.current : {\n      value: 'x'\n    });\n  };\n\n  React.useEffect(() => {\n    if (muiFormControl) {\n      muiFormControl.setAdornedStart(Boolean(startAdornment));\n    }\n  }, [muiFormControl, startAdornment]);\n\n  const styleProps = _extends({}, props, {\n    color: fcs.color || 'primary',\n    disabled: fcs.disabled,\n    endAdornment,\n    error: fcs.error,\n    focused: fcs.focused,\n    formControl: muiFormControl,\n    fullWidth,\n    hiddenLabel: fcs.hiddenLabel,\n    multiline,\n    size: fcs.size,\n    startAdornment,\n    type\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const Root = components.Root || InputBaseRoot;\n  const rootProps = componentsProps.root || {};\n  const Input = components.Input || InputBaseComponent;\n  inputProps = _extends({}, inputProps, componentsProps.input);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GlobalStyles, {\n    styles: {\n      '@keyframes mui-auto-fill': {},\n      '@keyframes mui-auto-fill-cancel': {}\n    }\n  }), /*#__PURE__*/React.createElement(Root, _extends({}, rootProps, !isHostComponent(Root) && {\n    styleProps: _extends({}, styleProps, rootProps.styleProps),\n    theme\n  }, {\n    ref: ref,\n    onClick: handleClick\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className)\n  }), startAdornment, /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Input, _extends({\n    styleProps: styleProps,\n    \"aria-invalid\": fcs.error,\n    \"aria-describedby\": ariaDescribedby,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    disabled: fcs.disabled,\n    id: id,\n    onAnimationStart: handleAutoFill,\n    name: name,\n    placeholder: placeholder,\n    readOnly: readOnly,\n    required: fcs.required,\n    rows: rows,\n    value: value,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    type: type\n  }, inputProps, !isHostComponent(Input) && {\n    as: InputComponent,\n    styleProps: _extends({}, styleProps, inputProps.styleProps),\n    theme\n  }, {\n    ref: handleInputRef,\n    className: clsx(classes.input, inputProps.className, inputPropsProp.className),\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus\n  }))), endAdornment, renderSuffix ? renderSuffix(_extends({}, fcs, {\n    startAdornment\n  })) : null));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputBase.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * The prop defaults to the value (`'primary'`) inherited from the parent FormControl component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The components used for each slot inside the InputBase.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Input: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Input.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * End `InputAdornment` for this component.\n   */\n  endAdornment: PropTypes.node,\n\n  /**\n   * If `true`, the `input` will indicate an error.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The component used for the `input` element.\n   * Either a string to use a HTML element or a component.\n   * @default 'input'\n   */\n  inputComponent: elementTypeAcceptingRef,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * @default {}\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   * The prop defaults to the value (`'none'`) inherited from the parent FormControl component.\n   */\n  margin: PropTypes.oneOf(['dense', 'none']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the `input` is blurred.\n   *\n   * Notice that the first argument (event) might be undefined.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  renderSuffix: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   * The prop defaults to the value (`false`) inherited from the parent FormControl component.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Start `InputAdornment` for this component.\n   */\n  startAdornment: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   * @default 'text'\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default InputBase;"]},"metadata":{},"sourceType":"module"}