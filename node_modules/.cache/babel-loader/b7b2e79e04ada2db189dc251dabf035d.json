{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\n\nconst overridesResolver = (props, styles) => styles.root || {};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\n\nconst TableHeadRoot = experimentalStyled('thead', {}, {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n\n  const {\n    className,\n    component = defaultComponent\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\"]);\n\n  const styleProps = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(TableHeadRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: component === defaultComponent ? null : 'rowgroup',\n    styleProps: styleProps\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component, normally `TableRow`.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TableHead;","map":{"version":3,"sources":["C:/GITHUB_PROJECTS/מחשב נייד 9.jpg/node_modules/@material-ui/core/TableHead/TableHead.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","unstable_composeClasses","composeClasses","Tablelvl2Context","useThemeProps","experimentalStyled","getTableHeadUtilityClass","overridesResolver","props","styles","root","useUtilityClasses","styleProps","classes","slots","TableHeadRoot","name","slot","display","tablelvl2","variant","defaultComponent","TableHead","forwardRef","inProps","ref","className","component","other","createElement","Provider","value","as","role","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","sx"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\r\n\r\nconst overridesResolver = (props, styles) => styles.root || {};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root']\r\n  };\r\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\r\n};\r\n\r\nconst TableHeadRoot = experimentalStyled('thead', {}, {\r\n  name: 'MuiTableHead',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})({\r\n  /* Styles applied to the root element. */\r\n  display: 'table-header-group'\r\n});\r\nconst tablelvl2 = {\r\n  variant: 'head'\r\n};\r\nconst defaultComponent = 'thead';\r\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiTableHead'\r\n  });\r\n\r\n  const {\r\n    className,\r\n    component = defaultComponent\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\"]);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    component\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\r\n    value: tablelvl2\r\n  }, /*#__PURE__*/React.createElement(TableHeadRoot, _extends({\r\n    as: component,\r\n    className: clsx(classes.root, className),\r\n    ref: ref,\r\n    role: component === defaultComponent ? null : 'rowgroup',\r\n    styleProps: styleProps\r\n  }, other)));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component, normally `TableRow`.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default TableHead;"]},"metadata":{},"sourceType":"module"}