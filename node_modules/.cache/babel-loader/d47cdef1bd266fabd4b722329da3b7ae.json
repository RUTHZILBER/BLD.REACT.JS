{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.dividers && styles.dividers), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    dividers\n  } = styleProps;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = experimentalStyled('div', {}, {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  flex: '1 1 auto',\n  WebkitOverflowScrolling: 'touch',\n  // Add iOS momentum scrolling.\n  overflowY: 'auto',\n  padding: '8px 24px',\n  '&:first-of-type': {\n    // dialog without title\n    paddingTop: 20\n  }\n}, styleProps.dividers && {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"dividers\"]);\n\n  const styleProps = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Display the top and bottom dividers.\r\n   * @default false\r\n   */\n  dividers: PropTypes.bool,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContent;","map":{"version":3,"sources":["C:/GITHUB_PROJECTS/מחשב נייד 9.jpg/node_modules/@material-ui/core/DialogContent/DialogContent.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","getDialogContentUtilityClass","overridesResolver","props","styles","styleProps","dividers","root","useUtilityClasses","classes","slots","DialogContentRoot","name","slot","theme","flex","WebkitOverflowScrolling","overflowY","padding","paddingTop","borderTop","palette","divider","borderBottom","DialogContent","forwardRef","inProps","ref","className","other","createElement","process","env","NODE_ENV","propTypes","children","node","object","string","bool","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  return deepmerge(_extends({}, styleProps.dividers && styles.dividers), styles.root || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    dividers\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', dividers && 'dividers']\r\n  };\r\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\r\n};\r\n\r\nconst DialogContentRoot = experimentalStyled('div', {}, {\r\n  name: 'MuiDialogContent',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  theme,\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the root element. */\r\n  flex: '1 1 auto',\r\n  WebkitOverflowScrolling: 'touch',\r\n  // Add iOS momentum scrolling.\r\n  overflowY: 'auto',\r\n  padding: '8px 24px',\r\n  '&:first-of-type': {\r\n    // dialog without title\r\n    paddingTop: 20\r\n  }\r\n}, styleProps.dividers && {\r\n  padding: '16px 24px',\r\n  borderTop: `1px solid ${theme.palette.divider}`,\r\n  borderBottom: `1px solid ${theme.palette.divider}`\r\n}));\r\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiDialogContent'\r\n  });\r\n\r\n  const {\r\n    className,\r\n    dividers = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"dividers\"]);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    dividers\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/React.createElement(DialogContentRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    styleProps: styleProps,\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Display the top and bottom dividers.\r\n   * @default false\r\n   */\r\n  dividers: PropTypes.bool,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default DialogContent;"]},"metadata":{},"sourceType":"module"}