{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.inset && styles.inset, styleProps.primary && styleProps.secondary && styles.multiline, styleProps.dense && styles.dense, {\n    [`& .${listItemTextClasses.primary}`]: styles.primary,\n    [`& .${listItemTextClasses.secondary}`]: styles.secondary\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = styleProps;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\n\nconst ListItemTextRoot = experimentalStyled('div', {}, {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, styleProps.primary && styleProps.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, styleProps.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n\n  const {\n    children,\n    className,\n    disableTypography = false,\n    inset = false,\n    primary: primaryProp,\n    primaryTypographyProps,\n    secondary: secondaryProp,\n    secondaryTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n\n  const styleProps = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItemText;","map":{"version":3,"sources":["C:/git/BLD.REACT.JS/node_modules/@material-ui/core/ListItemText/ListItemText.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","Typography","ListContext","useThemeProps","experimentalStyled","listItemTextClasses","getListItemTextUtilityClass","overridesResolver","props","styles","styleProps","inset","primary","secondary","multiline","dense","root","useUtilityClasses","classes","slots","ListItemTextRoot","name","slot","flex","minWidth","marginTop","marginBottom","paddingLeft","ListItemText","forwardRef","inProps","ref","children","className","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","useContext","type","createElement","variant","component","display","color","process","env","NODE_ENV","propTypes","node","object","string","bool","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.inset && styles.inset, styleProps.primary && styleProps.secondary && styles.multiline, styleProps.dense && styles.dense, {\n    [`& .${listItemTextClasses.primary}`]: styles.primary,\n    [`& .${listItemTextClasses.secondary}`]: styles.secondary\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = styleProps;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\n\nconst ListItemTextRoot = experimentalStyled('div', {}, {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, styleProps.primary && styleProps.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, styleProps.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n\n  const {\n    children,\n    className,\n    disableTypography = false,\n    inset = false,\n    primary: primaryProp,\n    primaryTypographyProps,\n    secondary: secondaryProp,\n    secondaryTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n\n  const styleProps = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItemText;"]},"metadata":{},"sourceType":"module"}