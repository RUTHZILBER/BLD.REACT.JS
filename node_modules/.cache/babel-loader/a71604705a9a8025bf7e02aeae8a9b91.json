{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\r\n * @ignore - internal component.\r\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n\n    return undefined;\n  }, [labelId]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: handleDisplayRef,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-disabled\": disabled ? 'true' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n    \"aria-describedby\": ariaDescribedby,\n    onKeyDown: handleKeyDown,\n    onMouseDown: disabled || readOnly ? null : handleMouseDown,\n    onBlur: handleBlur,\n    onFocus: onFocus\n  }, SelectDisplayProps, {\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, classes[variant], className, SelectDisplayProps.className, disabled && classes.disabled) // The id is required for proper a11y\n    ,\n    id: buttonId\n  }), isEmpty(display) ?\n  /*#__PURE__*/\n  // notranslate needed while Google Translate will not fix zero-width space issue\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    className: \"notranslate\",\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), /*#__PURE__*/React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    \"aria-hidden\": true,\n    onChange: handleChange,\n    tabIndex: -1,\n    disabled: disabled,\n    className: classes.nativeInput,\n    autoFocus: autoFocus\n  }, other)), /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], open && classes.iconOpen, disabled && classes.disabled)\n  }), /*#__PURE__*/React.createElement(Menu, _extends({\n    id: `menu-${name || ''}`,\n    anchorEl: displayNode,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      'aria-labelledby': labelId,\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\r\n   * @ignore\r\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  'aria-label': PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the width of the popover will automatically be set according to the items inside the\r\n   * menu, otherwise it will be at least the width of the select input.\r\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\r\n   * The option elements to populate the select with.\r\n   * Can be some `<MenuItem>` elements.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * The CSS class name of the select element.\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\n  defaultValue: PropTypes.any,\n\n  /**\r\n   * If `true`, the select is disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the selected item is displayed even if its value is empty.\r\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\r\n   * The icon that displays the arrow.\r\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\r\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\r\n   * Equivalent to `ref`\r\n   */\n  inputRef: refType,\n\n  /**\r\n   * The ID of an element that acts as an additional label. The Select will\r\n   * be labelled by the additional label and the selected value.\r\n   */\n  labelId: PropTypes.string,\n\n  /**\r\n   * Props applied to the [`Menu`](/api/menu/) element.\r\n   */\n  MenuProps: PropTypes.object,\n\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   */\n  multiple: PropTypes.bool,\n\n  /**\r\n   * Name attribute of the `select` or hidden `input` element.\r\n   */\n  name: PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  onBlur: PropTypes.func,\n\n  /**\r\n   * Callback fired when a menu item is selected.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value` (any).\r\n   * @param {object} [child] The react element that was selected.\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onOpen: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * @ignore\r\n   */\n  readOnly: PropTypes.bool,\n\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {any} value The `value` provided to the component.\r\n   * @returns {ReactNode}\r\n   */\n  renderValue: PropTypes.func,\n\n  /**\r\n   * Props applied to the clickable div element.\r\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * @ignore\r\n   */\n  type: PropTypes.any,\n\n  /**\r\n   * The input value.\r\n   */\n  value: PropTypes.any,\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"sources":["C:/GITHUB_PROJECTS/מחשב נייד 9.jpg/node_modules/@material-ui/core/Select/SelectInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","React","isFragment","PropTypes","clsx","refType","ownerDocument","capitalize","Menu","isFilled","useForkRef","useControlled","areEqualValues","a","b","String","isEmpty","display","trim","SelectInput","forwardRef","props","ref","ariaDescribedby","ariaLabel","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","variant","other","setValueState","controlled","default","useRef","displayRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","openState","setOpenState","handleRef","handleDisplayRef","useCallback","node","useImperativeHandle","focus","useEffect","label","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","undefined","update","event","clientWidth","handleMouseDown","button","preventDefault","handleClose","childrenArray","Children","toArray","handleChange","index","map","child","indexOf","target","handleItemClick","newValue","Array","isArray","slice","itemIndex","push","splice","onClick","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","persist","displaySingle","displayMultiple","computeDisplay","foundMatch","items","isValidElement","process","env","NODE_ENV","console","error","join","selected","Error","some","v","cloneElement","onKeyUp","role","values","warn","filter","x","menuMinWidth","buttonId","id","createElement","Fragment","Boolean","onKeyDown","onMouseDown","root","select","selectMenu","dangerouslySetInnerHTML","__html","nativeInput","icon","iconOpen","anchorEl","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","string","bool","object","isRequired","any","elementType","func","oneOfType","number","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@material-ui/utils';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport capitalize from '../utils/capitalize';\r\nimport Menu from '../Menu/Menu';\r\nimport { isFilled } from '../InputBase/utils';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport useControlled from '../utils/useControlled';\r\n\r\nfunction areEqualValues(a, b) {\r\n  if (typeof b === 'object' && b !== null) {\r\n    return a === b;\r\n  }\r\n\r\n  return String(a) === String(b);\r\n}\r\n\r\nfunction isEmpty(display) {\r\n  return display == null || typeof display === 'string' && !display.trim();\r\n}\r\n/**\r\n * @ignore - internal component.\r\n */\r\n\r\n\r\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\r\n  const {\r\n    'aria-describedby': ariaDescribedby,\r\n    'aria-label': ariaLabel,\r\n    autoFocus,\r\n    autoWidth,\r\n    children,\r\n    classes,\r\n    className,\r\n    defaultValue,\r\n    disabled,\r\n    displayEmpty,\r\n    IconComponent,\r\n    inputRef: inputRefProp,\r\n    labelId,\r\n    MenuProps = {},\r\n    multiple,\r\n    name,\r\n    onBlur,\r\n    onChange,\r\n    onClose,\r\n    onFocus,\r\n    onOpen,\r\n    open: openProp,\r\n    readOnly,\r\n    renderValue,\r\n    SelectDisplayProps = {},\r\n    tabIndex: tabIndexProp,\r\n    value: valueProp,\r\n    variant = 'standard'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\r\n\r\n  const [value, setValueState] = useControlled({\r\n    controlled: valueProp,\r\n    default: defaultValue,\r\n    name: 'Select'\r\n  });\r\n  const inputRef = React.useRef(null);\r\n  const displayRef = React.useRef(null);\r\n  const [displayNode, setDisplayNode] = React.useState(null);\r\n  const {\r\n    current: isOpenControlled\r\n  } = React.useRef(openProp != null);\r\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\r\n  const [openState, setOpenState] = React.useState(false);\r\n  const handleRef = useForkRef(ref, inputRefProp);\r\n  const handleDisplayRef = React.useCallback(node => {\r\n    displayRef.current = node;\r\n\r\n    if (node) {\r\n      setDisplayNode(node);\r\n    }\r\n  }, []);\r\n  React.useImperativeHandle(handleRef, () => ({\r\n    focus: () => {\r\n      displayRef.current.focus();\r\n    },\r\n    node: inputRef.current,\r\n    value\r\n  }), [value]);\r\n  React.useEffect(() => {\r\n    if (autoFocus) {\r\n      displayRef.current.focus();\r\n    }\r\n  }, [autoFocus]);\r\n  React.useEffect(() => {\r\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\r\n\r\n    if (label) {\r\n      const handler = () => {\r\n        if (getSelection().isCollapsed) {\r\n          displayRef.current.focus();\r\n        }\r\n      };\r\n\r\n      label.addEventListener('click', handler);\r\n      return () => {\r\n        label.removeEventListener('click', handler);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [labelId]);\r\n\r\n  const update = (open, event) => {\r\n    if (open) {\r\n      if (onOpen) {\r\n        onOpen(event);\r\n      }\r\n    } else if (onClose) {\r\n      onClose(event);\r\n    }\r\n\r\n    if (!isOpenControlled) {\r\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\r\n      setOpenState(open);\r\n    }\r\n  };\r\n\r\n  const handleMouseDown = event => {\r\n    // Ignore everything but left-click\r\n    if (event.button !== 0) {\r\n      return;\r\n    } // Hijack the default focus behavior.\r\n\r\n\r\n    event.preventDefault();\r\n    displayRef.current.focus();\r\n    update(true, event);\r\n  };\r\n\r\n  const handleClose = event => {\r\n    update(false, event);\r\n  };\r\n\r\n  const childrenArray = React.Children.toArray(children); // Support autofill.\r\n\r\n  const handleChange = event => {\r\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\r\n\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    const child = childrenArray[index];\r\n    setValueState(child.props.value);\r\n\r\n    if (onChange) {\r\n      onChange(event, child);\r\n    }\r\n  };\r\n\r\n  const handleItemClick = child => event => {\r\n    let newValue;\r\n\r\n    if (multiple) {\r\n      newValue = Array.isArray(value) ? value.slice() : [];\r\n      const itemIndex = value.indexOf(child.props.value);\r\n\r\n      if (itemIndex === -1) {\r\n        newValue.push(child.props.value);\r\n      } else {\r\n        newValue.splice(itemIndex, 1);\r\n      }\r\n    } else {\r\n      newValue = child.props.value;\r\n    }\r\n\r\n    if (child.props.onClick) {\r\n      child.props.onClick(event);\r\n    }\r\n\r\n    if (value !== newValue) {\r\n      setValueState(newValue);\r\n\r\n      if (onChange) {\r\n        // Redefine target to allow name and value to be read.\r\n        // This allows seamless integration with the most popular form libraries.\r\n        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\r\n        // Clone the event to not override `target` of the original event.\r\n        const nativeEvent = event.nativeEvent || event;\r\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\r\n        Object.defineProperty(clonedEvent, 'target', {\r\n          writable: true,\r\n          value: {\r\n            value: newValue,\r\n            name\r\n          }\r\n        });\r\n        onChange(clonedEvent, child);\r\n      }\r\n    }\r\n\r\n    if (!multiple) {\r\n      update(false, event);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    if (!readOnly) {\r\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\r\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\r\n      'Enter'];\r\n\r\n      if (validKeys.indexOf(event.key) !== -1) {\r\n        event.preventDefault();\r\n        update(true, event);\r\n      }\r\n    }\r\n  };\r\n\r\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\r\n\r\n  const handleBlur = event => {\r\n    // if open event.stopImmediatePropagation\r\n    if (!open && onBlur) {\r\n      event.persist(); // Preact support, target is read only property on a native event.\r\n\r\n      Object.defineProperty(event, 'target', {\r\n        writable: true,\r\n        value: {\r\n          value,\r\n          name\r\n        }\r\n      });\r\n      onBlur(event);\r\n    }\r\n  };\r\n\r\n  delete other['aria-invalid'];\r\n  let display;\r\n  let displaySingle;\r\n  const displayMultiple = [];\r\n  let computeDisplay = false;\r\n  let foundMatch = false; // No need to display any value if the field is empty.\r\n\r\n  if (isFilled({\r\n    value\r\n  }) || displayEmpty) {\r\n    if (renderValue) {\r\n      display = renderValue(value);\r\n    } else {\r\n      computeDisplay = true;\r\n    }\r\n  }\r\n\r\n  const items = childrenArray.map(child => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    let selected;\r\n\r\n    if (multiple) {\r\n      if (!Array.isArray(value)) {\r\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\r\n      }\r\n\r\n      selected = value.some(v => areEqualValues(v, child.props.value));\r\n\r\n      if (selected && computeDisplay) {\r\n        displayMultiple.push(child.props.children);\r\n      }\r\n    } else {\r\n      selected = areEqualValues(value, child.props.value);\r\n\r\n      if (selected && computeDisplay) {\r\n        displaySingle = child.props.children;\r\n      }\r\n    }\r\n\r\n    if (selected) {\r\n      foundMatch = true;\r\n    }\r\n\r\n    return /*#__PURE__*/React.cloneElement(child, {\r\n      'aria-selected': selected ? 'true' : undefined,\r\n      onClick: handleItemClick(child),\r\n      onKeyUp: event => {\r\n        if (event.key === ' ') {\r\n          // otherwise our MenuItems dispatches a click event\r\n          // it's not behavior of the native <option> and causes\r\n          // the select to close immediately since we open on space keydown\r\n          event.preventDefault();\r\n        }\r\n\r\n        if (child.props.onKeyUp) {\r\n          child.props.onKeyUp(event);\r\n        }\r\n      },\r\n      role: 'option',\r\n      selected,\r\n      value: undefined,\r\n      // The value is most likely not a valid HTML attribute.\r\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\r\n\r\n    });\r\n  });\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    React.useEffect(() => {\r\n      if (!foundMatch && !multiple && value !== '') {\r\n        const values = childrenArray.map(child => child.props.value);\r\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\r\n      }\r\n    }, [foundMatch, childrenArray, multiple, name, value]);\r\n  }\r\n\r\n  if (computeDisplay) {\r\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\r\n  } // Avoid performing a layout computation in the render method.\r\n\r\n\r\n  let menuMinWidth = menuMinWidthState;\r\n\r\n  if (!autoWidth && isOpenControlled && displayNode) {\r\n    menuMinWidth = displayNode.clientWidth;\r\n  }\r\n\r\n  let tabIndex;\r\n\r\n  if (typeof tabIndexProp !== 'undefined') {\r\n    tabIndex = tabIndexProp;\r\n  } else {\r\n    tabIndex = disabled ? null : 0;\r\n  }\r\n\r\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\r\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\r\n    ref: handleDisplayRef,\r\n    tabIndex: tabIndex,\r\n    role: \"button\",\r\n    \"aria-disabled\": disabled ? 'true' : undefined,\r\n    \"aria-expanded\": open ? 'true' : undefined,\r\n    \"aria-haspopup\": \"listbox\",\r\n    \"aria-label\": ariaLabel,\r\n    \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\r\n    \"aria-describedby\": ariaDescribedby,\r\n    onKeyDown: handleKeyDown,\r\n    onMouseDown: disabled || readOnly ? null : handleMouseDown,\r\n    onBlur: handleBlur,\r\n    onFocus: onFocus\r\n  }, SelectDisplayProps, {\r\n    className: clsx(classes.root, // TODO v5: merge root and select\r\n    classes.select, classes.selectMenu, classes[variant], className, SelectDisplayProps.className, disabled && classes.disabled) // The id is required for proper a11y\r\n    ,\r\n    id: buttonId\r\n  }), isEmpty(display) ?\r\n  /*#__PURE__*/\r\n  // notranslate needed while Google Translate will not fix zero-width space issue\r\n  // eslint-disable-next-line react/no-danger\r\n  React.createElement(\"span\", {\r\n    className: \"notranslate\",\r\n    dangerouslySetInnerHTML: {\r\n      __html: '&#8203;'\r\n    }\r\n  }) : display), /*#__PURE__*/React.createElement(\"input\", _extends({\r\n    value: Array.isArray(value) ? value.join(',') : value,\r\n    name: name,\r\n    ref: inputRef,\r\n    \"aria-hidden\": true,\r\n    onChange: handleChange,\r\n    tabIndex: -1,\r\n    disabled: disabled,\r\n    className: classes.nativeInput,\r\n    autoFocus: autoFocus\r\n  }, other)), /*#__PURE__*/React.createElement(IconComponent, {\r\n    className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], open && classes.iconOpen, disabled && classes.disabled)\r\n  }), /*#__PURE__*/React.createElement(Menu, _extends({\r\n    id: `menu-${name || ''}`,\r\n    anchorEl: displayNode,\r\n    open: open,\r\n    onClose: handleClose\r\n  }, MenuProps, {\r\n    MenuListProps: _extends({\r\n      'aria-labelledby': labelId,\r\n      role: 'listbox',\r\n      disableListWrap: true\r\n    }, MenuProps.MenuListProps),\r\n    PaperProps: _extends({}, MenuProps.PaperProps, {\r\n      style: _extends({\r\n        minWidth: menuMinWidth\r\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\r\n    })\r\n  }), items));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-describedby': PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  'aria-label': PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the width of the popover will automatically be set according to the items inside the\r\n   * menu, otherwise it will be at least the width of the select input.\r\n   */\r\n  autoWidth: PropTypes.bool,\r\n\r\n  /**\r\n   * The option elements to populate the select with.\r\n   * Can be some `<MenuItem>` elements.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**\r\n   * The CSS class name of the select element.\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   */\r\n  defaultValue: PropTypes.any,\r\n\r\n  /**\r\n   * If `true`, the select is disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the selected item is displayed even if its value is empty.\r\n   */\r\n  displayEmpty: PropTypes.bool,\r\n\r\n  /**\r\n   * The icon that displays the arrow.\r\n   */\r\n  IconComponent: PropTypes.elementType.isRequired,\r\n\r\n  /**\r\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\r\n   * Equivalent to `ref`\r\n   */\r\n  inputRef: refType,\r\n\r\n  /**\r\n   * The ID of an element that acts as an additional label. The Select will\r\n   * be labelled by the additional label and the selected value.\r\n   */\r\n  labelId: PropTypes.string,\r\n\r\n  /**\r\n   * Props applied to the [`Menu`](/api/menu/) element.\r\n   */\r\n  MenuProps: PropTypes.object,\r\n\r\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   */\r\n  multiple: PropTypes.bool,\r\n\r\n  /**\r\n   * Name attribute of the `select` or hidden `input` element.\r\n   */\r\n  name: PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onBlur: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when a menu item is selected.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value` (any).\r\n   * @param {object} [child] The react element that was selected.\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onOpen: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  readOnly: PropTypes.bool,\r\n\r\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {any} value The `value` provided to the component.\r\n   * @returns {ReactNode}\r\n   */\r\n  renderValue: PropTypes.func,\r\n\r\n  /**\r\n   * Props applied to the clickable div element.\r\n   */\r\n  SelectDisplayProps: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  type: PropTypes.any,\r\n\r\n  /**\r\n   * The input value.\r\n   */\r\n  value: PropTypes.any,\r\n\r\n  /**\r\n   * The variant to use.\r\n   */\r\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\r\n} : void 0;\r\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}