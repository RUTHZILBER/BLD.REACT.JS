{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, darken, lighten } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.edge && styles[`edge${capitalize(styleProps.edge)}`], styles[`size${capitalize(styleProps.size)}`], {\n    [`& .${switchClasses.switchBase}`]: _extends({}, styles.switchBase, styles.input, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]),\n    [`& .${switchClasses.thumb}`]: styles.thumb,\n    [`& .${switchClasses.track}`]: styles.track\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled', 'input'],\n    thumb: ['thumb'],\n    track: ['track']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, styleProps.edge === 'start' && {\n  marginLeft: -8\n}, styleProps.edge === 'end' && {\n  marginRight: -8\n}, styleProps.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    '&.Mui-checked': {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = experimentalStyled(SwitchBase, {}, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&.Mui-checked': {\n    transform: 'translateX(20px)'\n  },\n  '&.Mui-disabled': {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.Mui-checked + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.Mui-disabled + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    /* Styles applied to the internal SwitchBase component's input element. */\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.color !== 'default' && {\n  '&.Mui-checked': {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&.Mui-disabled': {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[styleProps.color].main, 0.62) : darken(theme.palette[styleProps.color].main, 0.55)\n    }\n  },\n  [`&.Mui-checked + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[styleProps.color].main\n  }\n}));\nconst SwitchTrack = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Track'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the track element. */\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Thumb'\n})(({\n  theme\n}) => ({\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"edge\", \"size\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const icon = /*#__PURE__*/React.createElement(SwitchThumb, {\n    className: classes.thumb,\n    styleProps: styleProps\n  });\n  return /*#__PURE__*/React.createElement(SwitchRoot, {\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, /*#__PURE__*/React.createElement(SwitchSwitchBase, _extends({\n    className: classes.switchBase,\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    classes: classes\n  })), /*#__PURE__*/React.createElement(SwitchTrack, {\n    className: classes.track,\n    styleProps: styleProps\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","map":{"version":3,"sources":["C:/BLD/BLD.REACT.JS/node_modules/@material-ui/core/Switch/Switch.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","refType","deepmerge","unstable_composeClasses","composeClasses","alpha","darken","lighten","capitalize","SwitchBase","useThemeProps","experimentalStyled","switchClasses","getSwitchUtilityClass","overridesResolver","props","styles","styleProps","edge","size","switchBase","input","color","thumb","track","root","useUtilityClasses","classes","checked","disabled","slots","composedClasses","SwitchRoot","name","slot","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","transform","SwitchSwitchBase","theme","top","left","palette","mode","common","white","grey","transition","transitions","create","duration","shortest","opacity","main","backgroundColor","action","hoverOpacity","SwitchTrack","borderRadius","black","SwitchThumb","boxShadow","shadows","Switch","forwardRef","inProps","ref","className","other","icon","createElement","type","checkedIcon","process","env","NODE_ENV","propTypes","bool","node","object","string","oneOf","defaultChecked","disableRipple","id","inputProps","inputRef","onChange","func","required","sx","value","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, darken, lighten } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.edge && styles[`edge${capitalize(styleProps.edge)}`], styles[`size${capitalize(styleProps.size)}`], {\n    [`& .${switchClasses.switchBase}`]: _extends({}, styles.switchBase, styles.input, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`]),\n    [`& .${switchClasses.thumb}`]: styles.thumb,\n    [`& .${switchClasses.track}`]: styles.track\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled', 'input'],\n    thumb: ['thumb'],\n    track: ['track']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, styleProps.edge === 'start' && {\n  marginLeft: -8\n}, styleProps.edge === 'end' && {\n  marginRight: -8\n}, styleProps.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    '&.Mui-checked': {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = experimentalStyled(SwitchBase, {}, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the internal `SwitchBase` component's `root` class. */\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&.Mui-checked': {\n    transform: 'translateX(20px)'\n  },\n  '&.Mui-disabled': {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.Mui-checked + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.Mui-disabled + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    /* Styles applied to the internal SwitchBase component's input element. */\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  styleProps\n}) => _extends({}, styleProps.color !== 'default' && {\n  '&.Mui-checked': {\n    color: theme.palette[styleProps.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[styleProps.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&.Mui-disabled': {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[styleProps.color].main, 0.62) : darken(theme.palette[styleProps.color].main, 0.55)\n    }\n  },\n  [`&.Mui-checked + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[styleProps.color].main\n  }\n}));\nconst SwitchTrack = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Track'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the track element. */\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = experimentalStyled('span', {}, {\n  name: 'MuiSwitch',\n  slot: 'Thumb'\n})(({\n  theme\n}) => ({\n  /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'secondary',\n    edge = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"edge\", \"size\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const icon = /*#__PURE__*/React.createElement(SwitchThumb, {\n    className: classes.thumb,\n    styleProps: styleProps\n  });\n  return /*#__PURE__*/React.createElement(SwitchRoot, {\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, /*#__PURE__*/React.createElement(SwitchSwitchBase, _extends({\n    className: classes.switchBase,\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    ref: ref,\n    styleProps: styleProps\n  }, other, {\n    classes: classes\n  })), /*#__PURE__*/React.createElement(SwitchTrack, {\n    className: classes.track,\n    styleProps: styleProps\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"]},"metadata":{},"sourceType":"module"}