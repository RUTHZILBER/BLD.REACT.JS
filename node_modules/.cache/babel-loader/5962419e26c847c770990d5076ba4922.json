{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { deepmerge } from '@material-ui/utils';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.color !== 'inherit' && styles[`color${capitalize(styleProps.color)}`], styles[`fontSize${capitalize(styleProps.fontSize)}`]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\n\nconst SvgIconRoot = experimentalStyled('svg', {}, {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => ({\n  /* Styles applied to the root element. */\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  display: 'inline-block',\n  fill: 'currentColor',\n  flexShrink: 0,\n  transition: theme.transitions.create('fill', {\n    duration: theme.transitions.duration.shorter\n  }),\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(35)\n  }[styleProps.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: theme.palette.primary.main,\n    secondary: theme.palette.secondary.main,\n    action: theme.palette.action.active,\n    error: theme.palette.error.main,\n    disabled: theme.palette.action.disabled,\n    inherit: undefined\n  }[styleProps.color]\n}));\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n\n  const {\n    children,\n    className,\n    color = 'inherit',\n    component = 'svg',\n    fontSize = 'medium',\n    htmlColor,\n    titleAccess,\n    viewBox = '0 0 24 24'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    viewBox\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'large', 'medium', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;","map":{"version":3,"sources":["C:/BLD/BLD.REACT.JS/node_modules/@material-ui/core/SvgIcon/SvgIcon.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","unstable_composeClasses","composeClasses","deepmerge","capitalize","useThemeProps","experimentalStyled","getSvgIconUtilityClass","overridesResolver","props","styles","styleProps","color","fontSize","root","useUtilityClasses","classes","slots","SvgIconRoot","name","slot","theme","userSelect","width","height","display","fill","flexShrink","transition","transitions","create","duration","shorter","inherit","small","typography","pxToRem","medium","large","primary","palette","main","secondary","action","active","error","disabled","undefined","SvgIcon","forwardRef","inProps","ref","children","className","component","htmlColor","titleAccess","viewBox","other","createElement","as","focusable","role","process","env","NODE_ENV","propTypes","node","object","string","oneOf","elementType","shapeRendering","sx","muiName"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { deepmerge } from '@material-ui/utils';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getSvgIconUtilityClass } from './svgIconClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.color !== 'inherit' && styles[`color${capitalize(styleProps.color)}`], styles[`fontSize${capitalize(styleProps.fontSize)}`]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getSvgIconUtilityClass, classes);\n};\n\nconst SvgIconRoot = experimentalStyled('svg', {}, {\n  name: 'MuiSvgIcon',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => ({\n  /* Styles applied to the root element. */\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  display: 'inline-block',\n  fill: 'currentColor',\n  flexShrink: 0,\n  transition: theme.transitions.create('fill', {\n    duration: theme.transitions.duration.shorter\n  }),\n  fontSize: {\n    inherit: 'inherit',\n    small: theme.typography.pxToRem(20),\n    medium: theme.typography.pxToRem(24),\n    large: theme.typography.pxToRem(35)\n  }[styleProps.fontSize],\n  // TODO v5 deprecate, v6 remove for sx\n  color: {\n    primary: theme.palette.primary.main,\n    secondary: theme.palette.secondary.main,\n    action: theme.palette.action.active,\n    error: theme.palette.error.main,\n    disabled: theme.palette.action.disabled,\n    inherit: undefined\n  }[styleProps.color]\n}));\nconst SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSvgIcon'\n  });\n\n  const {\n    children,\n    className,\n    color = 'inherit',\n    component = 'svg',\n    fontSize = 'medium',\n    htmlColor,\n    titleAccess,\n    viewBox = '0 0 24 24'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    fontSize,\n    viewBox\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(SvgIconRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   * @default 'inherit'\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'large', 'medium', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this prop.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   * @default '0 0 24 24'\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default SvgIcon;"]},"metadata":{},"sourceType":"module"}