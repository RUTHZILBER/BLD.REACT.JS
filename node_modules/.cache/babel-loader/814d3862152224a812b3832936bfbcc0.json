{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { deepmerge, elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nimport collapseClasses, { getCollapseUtilityClass } from './collapseClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[styleProps.orientation], styleProps.state === 'entered' && styles.entered, styleProps.state === 'exited' && !styleProps.in && styleProps.collapsedSize === '0px' && styles.hidden, {\n    [`& .${collapseClasses.wrapper}`]: styles.wrapper,\n    [`& .${collapseClasses.wrapperInner}`]: styles.wrapperInner\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    orientation,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', `${orientation}`],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', `${orientation}`],\n    wrapperInner: ['wrapperInner', `${orientation}`]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\n\nconst CollapseRoot = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  height: 0,\n  overflow: 'hidden',\n  transition: theme.transitions.create('height')\n}, styleProps.orientation === 'horizontal' && {\n  height: 'auto',\n  width: 0,\n  transition: theme.transitions.create('width')\n}, styleProps.state === 'entered' && _extends({\n  height: 'auto',\n  overflow: 'visible'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto'\n}), styleProps.state === 'exited' && !styleProps.in && styleProps.collapsedSize === '0px' && {\n  visibility: 'hidden'\n}));\n/* Styles applied to the outer wrapper element. */\n\nconst CollapseWrapper = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'Wrapper'\n})(({\n  styleProps\n}) => _extends({\n  // Hack to get children with a negative margin to not falsify the height computation.\n  display: 'flex',\n  width: '100%'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n/* Styles applied to the inner wrapper element. */\n\nconst CollapseWrapperInner = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner'\n})(({\n  styleProps\n}) => _extends({\n  width: '100%'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n\n  const {\n    children,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"collapsedSize\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"orientation\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const styleProps = _extends({}, props, {\n    orientation,\n    collapsedSize: collapsedSizeProp\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const theme = useTheme();\n  const timer = React.useRef();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation === 'horizontal';\n  const size = isHorizontal ? 'width' : 'height';\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n\n    const {\n      duration: transitionDuration\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'enter'\n    });\n\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = `${wrapperSize}px`;\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'exit'\n    });\n\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), (state, childProps) => /*#__PURE__*/React.createElement(CollapseRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className, {\n      'entered': classes.entered,\n      'exited': !inProp && collapsedSize === '0px' && classes.hidden\n    }[state]),\n    style: _extends({\n      [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize\n    }, style),\n    styleProps: _extends({}, styleProps, {\n      state\n    }),\n    ref: handleRef\n  }, childProps), /*#__PURE__*/React.createElement(CollapseWrapper, {\n    styleProps: _extends({}, styleProps, {\n      state\n    }),\n    className: classes.wrapper,\n    ref: wrapperRef\n  }, /*#__PURE__*/React.createElement(CollapseWrapperInner, {\n    styleProps: _extends({}, styleProps, {\n      state\n    }),\n    className: classes.wrapperInner\n  }, children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * The transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default Collapse;","map":{"version":3,"sources":["C:/git/BLD.REACT.JS/node_modules/@material-ui/core/Collapse/Collapse.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","clsx","PropTypes","Transition","deepmerge","elementTypeAcceptingRef","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","duration","getTransitionProps","useTheme","useForkRef","collapseClasses","getCollapseUtilityClass","overridesResolver","props","styles","styleProps","orientation","state","entered","in","collapsedSize","hidden","wrapper","wrapperInner","root","useUtilityClasses","classes","slots","CollapseRoot","name","slot","theme","height","overflow","transition","transitions","create","width","visibility","CollapseWrapper","display","CollapseWrapperInner","Collapse","forwardRef","inProps","ref","children","className","collapsedSizeProp","component","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","standard","TransitionComponent","other","timer","useRef","wrapperRef","autoTransitionDuration","isHorizontal","size","useEffect","clearTimeout","current","nodeRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","undefined","getWrapperSize","handleEnter","isAppearing","position","handleEntering","wrapperSize","transitionDuration","mode","duration2","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","addEndListener","next","setTimeout","createElement","childProps","as","process","env","NODE_ENV","propTypes","object","string","oneOfType","number","bool","func","oneOf","sx","shape","appear","enter","exit","muiSupportAuto"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { deepmerge, elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nimport collapseClasses, { getCollapseUtilityClass } from './collapseClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[styleProps.orientation], styleProps.state === 'entered' && styles.entered, styleProps.state === 'exited' && !styleProps.in && styleProps.collapsedSize === '0px' && styles.hidden, {\n    [`& .${collapseClasses.wrapper}`]: styles.wrapper,\n    [`& .${collapseClasses.wrapperInner}`]: styles.wrapperInner\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    orientation,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', `${orientation}`],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', `${orientation}`],\n    wrapperInner: ['wrapperInner', `${orientation}`]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\n\nconst CollapseRoot = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  height: 0,\n  overflow: 'hidden',\n  transition: theme.transitions.create('height')\n}, styleProps.orientation === 'horizontal' && {\n  height: 'auto',\n  width: 0,\n  transition: theme.transitions.create('width')\n}, styleProps.state === 'entered' && _extends({\n  height: 'auto',\n  overflow: 'visible'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto'\n}), styleProps.state === 'exited' && !styleProps.in && styleProps.collapsedSize === '0px' && {\n  visibility: 'hidden'\n}));\n/* Styles applied to the outer wrapper element. */\n\nconst CollapseWrapper = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'Wrapper'\n})(({\n  styleProps\n}) => _extends({\n  // Hack to get children with a negative margin to not falsify the height computation.\n  display: 'flex',\n  width: '100%'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n/* Styles applied to the inner wrapper element. */\n\nconst CollapseWrapperInner = experimentalStyled('div', {}, {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner'\n})(({\n  styleProps\n}) => _extends({\n  width: '100%'\n}, styleProps.orientation === 'horizontal' && {\n  width: 'auto',\n  height: '100%'\n}));\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n\n  const {\n    children,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"collapsedSize\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"orientation\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const styleProps = _extends({}, props, {\n    orientation,\n    collapsedSize: collapsedSizeProp\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const theme = useTheme();\n  const timer = React.useRef();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation === 'horizontal';\n  const size = isHorizontal ? 'width' : 'height';\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n\n    const {\n      duration: transitionDuration\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'enter'\n    });\n\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = `${wrapperSize}px`;\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'exit'\n    });\n\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), (state, childProps) => /*#__PURE__*/React.createElement(CollapseRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className, {\n      'entered': classes.entered,\n      'exited': !inProp && collapsedSize === '0px' && classes.hidden\n    }[state]),\n    style: _extends({\n      [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize\n    }, style),\n    styleProps: _extends({}, styleProps, {\n      state\n    }),\n    ref: handleRef\n  }, childProps), /*#__PURE__*/React.createElement(CollapseWrapper, {\n    styleProps: _extends({}, styleProps, {\n      state\n    }),\n    className: classes.wrapper,\n    ref: wrapperRef\n  }, /*#__PURE__*/React.createElement(CollapseWrapperInner, {\n    styleProps: _extends({}, styleProps, {\n      state\n    }),\n    className: classes.wrapperInner\n  }, children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * The transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default Collapse;"]},"metadata":{},"sourceType":"module"}