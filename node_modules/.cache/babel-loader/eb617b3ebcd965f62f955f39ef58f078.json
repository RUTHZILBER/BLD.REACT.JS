{"ast":null,"code":"import React from 'react';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport produce from 'immer'; // הפרטים המאוחסנים בכל הקומפוננטות-פרטי המשתמש, הערה=מצב המתג (פרטי או גלובלי) ורשימת השירים הניתנים לצפיה ללקוח זה\n\nconst userDetails = {\n  UserId: \"\",\n  UserName: \"\",\n  FirstName: \"\",\n  LastName: \"\",\n  Email: \"\",\n  Password: \"\",\n  NotingTime: \"\",\n  Comment: \"private\",\n  SongList: []\n};\nconst reducer = produce((state, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      {\n        state.UserId = action.payload.userId;\n        state.UserName = action.payload.userName;\n        state.FirstName = action.payload.firstName;\n        state.LastName = action.payload.lastName;\n        state.Email = action.payload.email;\n        state.Password = action.payload.password;\n        state.NotingTime = action.payload.notingTime;\n        state.Comment = action.payload.comment;\n        break;\n      }\n\n    case 'SET_STATE':\n      {\n        if (state.Comment == \"all\") {\n          state.Comment = \"private\";\n        } else {\n          state.Comment = \"all\";\n        }\n\n        break;\n      }\n\n    case 'SET_SONG_LIST':\n      {\n        state.SongList = action.payload;\n        break;\n      }\n\n    default:\n      break;\n  }\n}, userDetails);\nconst Store = createStore(reducer);\nwindow.Store = Store;\nexport default Store;","map":{"version":3,"sources":["C:/GITHUB_PROJECTS/מחשב נייד 9.jpg/src/Store.js"],"names":["React","createStore","combineReducers","applyMiddleware","produce","userDetails","UserId","UserName","FirstName","LastName","Email","Password","NotingTime","Comment","SongList","reducer","state","action","type","payload","userId","userName","firstName","lastName","email","password","notingTime","comment","Store","window"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,OAAP,MAAoB,OAApB,C,CACA;;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,EADU;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,SAAS,EAAE,EAHO;AAIlBC,EAAAA,QAAQ,EAAE,EAJQ;AAKlBC,EAAAA,KAAK,EAAE,EALW;AAMlBC,EAAAA,QAAQ,EAAE,EANQ;AAOlBC,EAAAA,UAAU,EAAE,EAPM;AAQlBC,EAAAA,OAAO,EAAE,SARS;AASlBC,EAAAA,QAAQ,EAAE;AATQ,CAApB;AAWA,MAAMC,OAAO,GAAGX,OAAO,CAAC,CAACY,KAAD,EAAQC,MAAR,KAAmB;AAEzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE;AAEEF,QAAAA,KAAK,CAACV,MAAN,GAAeW,MAAM,CAACE,OAAP,CAAeC,MAA9B;AACAJ,QAAAA,KAAK,CAACT,QAAN,GAAiBU,MAAM,CAACE,OAAP,CAAeE,QAAhC;AACAL,QAAAA,KAAK,CAACR,SAAN,GAAkBS,MAAM,CAACE,OAAP,CAAeG,SAAjC;AACAN,QAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACE,OAAP,CAAeI,QAAhC;AACAP,QAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACE,OAAP,CAAeK,KAA7B;AACAR,QAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACE,OAAP,CAAeM,QAAhC;AACAT,QAAAA,KAAK,CAACJ,UAAN,GAAmBK,MAAM,CAACE,OAAP,CAAeO,UAAlC;AACAV,QAAAA,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,OAAP,CAAeQ,OAA/B;AAEA;AACD;;AAEH,SAAK,WAAL;AAAkB;AAChB,YAAIX,KAAK,CAACH,OAAN,IAAiB,KAArB,EAA4B;AAC1BG,UAAAA,KAAK,CAACH,OAAN,GAAgB,SAAhB;AACD,SAFD,MAGK;AACHG,UAAAA,KAAK,CAACH,OAAN,GAAgB,KAAhB;AACD;;AAED;AACD;;AAED,SAAK,eAAL;AAAsB;AACpBG,QAAAA,KAAK,CAACF,QAAN,GAAiBG,MAAM,CAACE,OAAxB;AACA;AACD;;AAED;AACE;AAjCJ;AAmCD,CArCsB,EAqCpBd,WArCoB,CAAvB;AAyCA,MAAMuB,KAAK,GAAG3B,WAAW,CAACc,OAAD,CAAzB;AACAc,MAAM,CAACD,KAAP,GAAeA,KAAf;AACA,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport produce from 'immer';\r\n// הפרטים המאוחסנים בכל הקומפוננטות-פרטי המשתמש, הערה=מצב המתג (פרטי או גלובלי) ורשימת השירים הניתנים לצפיה ללקוח זה\r\nconst userDetails = {\r\n  UserId: \"\",\r\n  UserName: \"\",\r\n  FirstName: \"\",\r\n  LastName: \"\",\r\n  Email: \"\",\r\n  Password: \"\",\r\n  NotingTime: \"\",\r\n  Comment: \"private\",\r\n  SongList: []\r\n}\r\nconst reducer = produce((state, action) => {\r\n\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      {\r\n\r\n        state.UserId = action.payload.userId;\r\n        state.UserName = action.payload.userName;\r\n        state.FirstName = action.payload.firstName;\r\n        state.LastName = action.payload.lastName;\r\n        state.Email = action.payload.email;\r\n        state.Password = action.payload.password;\r\n        state.NotingTime = action.payload.notingTime;\r\n        state.Comment = action.payload.comment;\r\n\r\n        break;\r\n      }\r\n\r\n    case 'SET_STATE': {\r\n      if (state.Comment == \"all\") {\r\n        state.Comment = \"private\";\r\n      }\r\n      else {\r\n        state.Comment = \"all\";\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    case 'SET_SONG_LIST': {\r\n      state.SongList = action.payload;\r\n      break;\r\n    }\r\n\r\n    default:\r\n      break;\r\n  }\r\n}, userDetails);\r\n\r\n\r\n\r\nconst Store = createStore(reducer);\r\nwindow.Store = Store;\r\nexport default Store;"]},"metadata":{},"sourceType":"module"}