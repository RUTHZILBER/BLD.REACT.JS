{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    '@media print': {\n      // Use !important to override the Modal inline-style.\n      position: 'absolute !important'\n    }\n  },\n\n  /* Styles applied to the container element if `scroll=\"paper\"`. */\n  scrollPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the container element if `scroll=\"body\"`. */\n  scrollBody: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    textAlign: 'center',\n    '&:after': {\n      content: '\"\"',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: '100%',\n      width: '0'\n    }\n  },\n\n  /* Styles applied to the container element. */\n  container: {\n    height: '100%',\n    '@media print': {\n      height: 'auto'\n    },\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  },\n\n  /* Styles applied to the Paper component. */\n  paper: {\n    margin: 32,\n    position: 'relative',\n    overflowY: 'auto',\n    // Fix IE11 issue, to remove at some point.\n    '@media print': {\n      overflowY: 'visible',\n      boxShadow: 'none'\n    }\n  },\n\n  /* Styles applied to the Paper component if `scroll=\"paper\"`. */\n  paperScrollPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the Paper component if `scroll=\"body\"`. */\n  paperScrollBody: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    textAlign: 'left' // 'initial' doesn't work on IE11\n\n  },\n\n  /* Styles applied to the Paper component if `maxWidth=false`. */\n  paperWidthFalse: {\n    maxWidth: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the Paper component if `maxWidth=\"xs\"`. */\n  paperWidthXs: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the Paper component if `maxWidth=\"sm\"`. */\n  paperWidthSm: {\n    maxWidth: theme.breakpoints.values.sm,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the Paper component if `maxWidth=\"md\"`. */\n  paperWidthMd: {\n    maxWidth: theme.breakpoints.values.md,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the Paper component if `maxWidth=\"lg\"`. */\n  paperWidthLg: {\n    maxWidth: theme.breakpoints.values.lg,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the Paper component if `maxWidth=\"xl\"`. */\n  paperWidthXl: {\n    maxWidth: theme.breakpoints.values.xl,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the Paper component if `fullWidth={true}`. */\n  paperFullWidth: {\n    width: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the Paper component if `fullScreen={true}`. */\n  paperFullScreen: {\n    margin: 0,\n    width: '100%',\n    maxWidth: '100%',\n    height: '100%',\n    maxHeight: 'none',\n    borderRadius: 0,\n    '&$paperScrollBody': {\n      margin: 0,\n      maxWidth: '100%'\n    }\n  }\n});\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\r\n * Dialogs are overlaid modal paper based components with a backdrop.\r\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  const {\n    BackdropProps,\n    children,\n    classes,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps,\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledby\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    role: \"presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[`scroll${capitalize(scroll)}`]),\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[`paperScroll${capitalize(scroll)}`], classes[`paperWidth${capitalize(String(maxWidth))}`], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The id(s) of the element(s) that describe the dialog.\r\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\r\n   * The id(s) of the element(s) that label the dialog.\r\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\r\n   * @ignore\r\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\r\n   * Dialog children, usually the included sub-components.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   * @default false\r\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\r\n   * If `true`, the dialog is full-screen.\r\n   * @default false\r\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\r\n   * If `true`, the dialog stretches to `maxWidth`.\r\n   *\r\n   * Notice that the dialog width grow is limited by the default margin.\r\n   * @default false\r\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\r\n   * Determine the max-width of the dialog.\r\n   * The dialog width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   * @default 'sm'\r\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\r\n   * The component used to render the body of the dialog.\r\n   * @default Paper\r\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Paper`](/api/paper/) element.\r\n   * @default {}\r\n   */\n  PaperProps: PropTypes.object,\n\n  /**\r\n   * Determine the container for scrolling the dialog.\r\n   * @default 'paper'\r\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Fade\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","map":{"version":3,"sources":["C:/GITHUB_PROJECTS/מחשב נייד 9.jpg/node_modules/@material-ui/core/Dialog/Dialog.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","capitalize","Modal","Fade","duration","Paper","styles","theme","root","position","scrollPaper","display","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","container","outline","paper","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","maxWidth","paperWidthXs","Math","max","breakpoints","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","paperFullWidth","paperFullScreen","borderRadius","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Dialog","forwardRef","props","ref","BackdropProps","children","classes","className","disableEscapeKeyDown","fullScreen","fullWidth","onBackdropClick","onClose","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","backdropClick","useRef","handleMouseDown","event","current","target","currentTarget","handleBackdropClick","createElement","closeAfterTransition","onClick","appear","in","timeout","role","onMouseDown","elevation","String","process","env","NODE_ENV","propTypes","string","object","node","bool","oneOf","func","isRequired","elementType","oneOfType","number","shape","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport withStyles from '../styles/withStyles';\r\nimport capitalize from '../utils/capitalize';\r\nimport Modal from '../Modal';\r\nimport Fade from '../Fade';\r\nimport { duration } from '../styles/transitions';\r\nimport Paper from '../Paper';\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    '@media print': {\r\n      // Use !important to override the Modal inline-style.\r\n      position: 'absolute !important'\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the container element if `scroll=\"paper\"`. */\r\n  scrollPaper: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n\r\n  /* Styles applied to the container element if `scroll=\"body\"`. */\r\n  scrollBody: {\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    textAlign: 'center',\r\n    '&:after': {\r\n      content: '\"\"',\r\n      display: 'inline-block',\r\n      verticalAlign: 'middle',\r\n      height: '100%',\r\n      width: '0'\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the container element. */\r\n  container: {\r\n    height: '100%',\r\n    '@media print': {\r\n      height: 'auto'\r\n    },\r\n    // We disable the focus ring for mouse, touch and keyboard users.\r\n    outline: 0\r\n  },\r\n\r\n  /* Styles applied to the Paper component. */\r\n  paper: {\r\n    margin: 32,\r\n    position: 'relative',\r\n    overflowY: 'auto',\r\n    // Fix IE11 issue, to remove at some point.\r\n    '@media print': {\r\n      overflowY: 'visible',\r\n      boxShadow: 'none'\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `scroll=\"paper\"`. */\r\n  paperScrollPaper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    maxHeight: 'calc(100% - 64px)'\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `scroll=\"body\"`. */\r\n  paperScrollBody: {\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle',\r\n    textAlign: 'left' // 'initial' doesn't work on IE11\r\n\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `maxWidth=false`. */\r\n  paperWidthFalse: {\r\n    maxWidth: 'calc(100% - 64px)'\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `maxWidth=\"xs\"`. */\r\n  paperWidthXs: {\r\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444),\r\n    '&$paperScrollBody': {\r\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      }\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `maxWidth=\"sm\"`. */\r\n  paperWidthSm: {\r\n    maxWidth: theme.breakpoints.values.sm,\r\n    '&$paperScrollBody': {\r\n      [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      }\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `maxWidth=\"md\"`. */\r\n  paperWidthMd: {\r\n    maxWidth: theme.breakpoints.values.md,\r\n    '&$paperScrollBody': {\r\n      [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      }\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `maxWidth=\"lg\"`. */\r\n  paperWidthLg: {\r\n    maxWidth: theme.breakpoints.values.lg,\r\n    '&$paperScrollBody': {\r\n      [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      }\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `maxWidth=\"xl\"`. */\r\n  paperWidthXl: {\r\n    maxWidth: theme.breakpoints.values.xl,\r\n    '&$paperScrollBody': {\r\n      [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\r\n        maxWidth: 'calc(100% - 64px)'\r\n      }\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `fullWidth={true}`. */\r\n  paperFullWidth: {\r\n    width: 'calc(100% - 64px)'\r\n  },\r\n\r\n  /* Styles applied to the Paper component if `fullScreen={true}`. */\r\n  paperFullScreen: {\r\n    margin: 0,\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    height: '100%',\r\n    maxHeight: 'none',\r\n    borderRadius: 0,\r\n    '&$paperScrollBody': {\r\n      margin: 0,\r\n      maxWidth: '100%'\r\n    }\r\n  }\r\n});\r\nconst defaultTransitionDuration = {\r\n  enter: duration.enteringScreen,\r\n  exit: duration.leavingScreen\r\n};\r\n/**\r\n * Dialogs are overlaid modal paper based components with a backdrop.\r\n */\r\n\r\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\r\n  const {\r\n    BackdropProps,\r\n    children,\r\n    classes,\r\n    className,\r\n    disableEscapeKeyDown = false,\r\n    fullScreen = false,\r\n    fullWidth = false,\r\n    maxWidth = 'sm',\r\n    onBackdropClick,\r\n    onClose,\r\n    open,\r\n    PaperComponent = Paper,\r\n    PaperProps = {},\r\n    scroll = 'paper',\r\n    TransitionComponent = Fade,\r\n    transitionDuration = defaultTransitionDuration,\r\n    TransitionProps,\r\n    'aria-describedby': ariaDescribedby,\r\n    'aria-labelledby': ariaLabelledby\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\r\n\r\n  const backdropClick = React.useRef();\r\n\r\n  const handleMouseDown = event => {\r\n    // We don't want to close the dialog when clicking the dialog content.\r\n    // Make sure the event starts and ends on the same DOM element.\r\n    backdropClick.current = event.target === event.currentTarget;\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    // Ignore the events not coming from the \"backdrop\".\r\n    if (!backdropClick.current) {\r\n      return;\r\n    }\r\n\r\n    backdropClick.current = null;\r\n\r\n    if (onBackdropClick) {\r\n      onBackdropClick(event);\r\n    }\r\n\r\n    if (onClose) {\r\n      onClose(event, 'backdropClick');\r\n    }\r\n  };\r\n\r\n  return /*#__PURE__*/React.createElement(Modal, _extends({\r\n    className: clsx(classes.root, className),\r\n    BackdropProps: _extends({\r\n      transitionDuration\r\n    }, BackdropProps),\r\n    closeAfterTransition: true,\r\n    disableEscapeKeyDown: disableEscapeKeyDown,\r\n    onClose: onClose,\r\n    open: open,\r\n    ref: ref,\r\n    onClick: handleBackdropClick\r\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\r\n    appear: true,\r\n    in: open,\r\n    timeout: transitionDuration,\r\n    role: \"presentation\"\r\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\r\n    className: clsx(classes.container, classes[`scroll${capitalize(scroll)}`]),\r\n    onMouseDown: handleMouseDown\r\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\r\n    elevation: 24,\r\n    role: \"dialog\",\r\n    \"aria-describedby\": ariaDescribedby,\r\n    \"aria-labelledby\": ariaLabelledby\r\n  }, PaperProps, {\r\n    className: clsx(classes.paper, classes[`paperScroll${capitalize(scroll)}`], classes[`paperWidth${capitalize(String(maxWidth))}`], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\r\n  }), children))));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The id(s) of the element(s) that describe the dialog.\r\n   */\r\n  'aria-describedby': PropTypes.string,\r\n\r\n  /**\r\n   * The id(s) of the element(s) that label the dialog.\r\n   */\r\n  'aria-labelledby': PropTypes.string,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  BackdropProps: PropTypes.object,\r\n\r\n  /**\r\n   * Dialog children, usually the included sub-components.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   * @default false\r\n   */\r\n  disableEscapeKeyDown: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the dialog is full-screen.\r\n   * @default false\r\n   */\r\n  fullScreen: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the dialog stretches to `maxWidth`.\r\n   *\r\n   * Notice that the dialog width grow is limited by the default margin.\r\n   * @default false\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n\r\n  /**\r\n   * Determine the max-width of the dialog.\r\n   * The dialog width grows with the size of the screen.\r\n   * Set to `false` to disable `maxWidth`.\r\n   * @default 'sm'\r\n   */\r\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\r\n\r\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * The component used to render the body of the dialog.\r\n   * @default Paper\r\n   */\r\n  PaperComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`Paper`](/api/paper/) element.\r\n   * @default {}\r\n   */\r\n  PaperProps: PropTypes.object,\r\n\r\n  /**\r\n   * Determine the container for scrolling the dialog.\r\n   * @default 'paper'\r\n   */\r\n  scroll: PropTypes.oneOf(['body', 'paper']),\r\n\r\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Fade\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiDialog'\r\n})(Dialog);"]},"metadata":{},"sourceType":"module"}