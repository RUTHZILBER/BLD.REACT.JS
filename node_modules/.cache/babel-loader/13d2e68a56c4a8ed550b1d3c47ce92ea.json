{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  const size = styleProps[breakpoint];\n  if (!size) return;\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    // Keep 7 significant numbers.\n    const width = `${Math.round(size / 12 * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.spacing !== 0) {\n      const themeSpacing = theme.spacing(styleProps.spacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    spacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && spacing !== 0) {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing !== '0px') {\n      styles = {\n        width: `calc(100% + ${getOffset(themeSpacing)})`,\n        marginTop: `-${getOffset(themeSpacing)}`,\n        marginLeft: `-${getOffset(themeSpacing)}`,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: getOffset(themeSpacing),\n          paddingLeft: getOffset(themeSpacing)\n        }\n      };\n    }\n  }\n\n  return styles;\n}\n\nconst overridesResolver = (props, styles) => {\n  const {\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = props.styleProps;\n  return deepmerge(_extends({}, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]), styles.root || {});\n}; // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nconst GridRoot = experimentalStyled('div', {}, {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  boxSizing: 'border-box'\n}, styleProps.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, styleProps.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, styleProps.zeroMinWidth && {\n  minWidth: 0\n}, styleProps.direction === 'column' && {\n  flexDirection: 'column',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'column-reverse' && {\n  flexDirection: 'column-reverse',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'row-reverse' && {\n  flexDirection: 'row-reverse'\n}, styleProps.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, styleProps.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateGap, ({\n  theme,\n  styleProps\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const styleProps = _extends({}, props, {\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","map":{"version":3,"sources":["C:/BLD/BLD.REACT.JS/node_modules/@material-ui/core/Grid/Grid.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_extendSxProp","extendSxProp","unstable_composeClasses","composeClasses","requirePropFactory","experimentalStyled","useThemeProps","gridClasses","getGridUtilityClass","getOffset","val","parse","parseFloat","String","replace","generateGrid","globalStyles","theme","breakpoint","styleProps","size","styles","flexBasis","flexGrow","maxWidth","width","Math","round","more","container","item","spacing","themeSpacing","fullWidth","breakpoints","values","Object","assign","up","generateGap","marginTop","marginLeft","paddingTop","paddingLeft","overridesResolver","props","direction","lg","md","sm","wrap","xl","xs","zeroMinWidth","root","GridRoot","name","slot","boxSizing","display","flexWrap","margin","minWidth","flexDirection","keys","reduce","useUtilityClasses","classes","slots","Grid","forwardRef","inProps","ref","themeProps","className","component","other","createElement","as","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","bool","oneOf","oneOfType","sx","requireProp"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  const size = styleProps[breakpoint];\n  if (!size) return;\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    // Keep 7 significant numbers.\n    const width = `${Math.round(size / 12 * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.spacing !== 0) {\n      const themeSpacing = theme.spacing(styleProps.spacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGap({\n  theme,\n  styleProps\n}) {\n  const {\n    container,\n    spacing\n  } = styleProps;\n  let styles = {};\n\n  if (container && spacing !== 0) {\n    const themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing !== '0px') {\n      styles = {\n        width: `calc(100% + ${getOffset(themeSpacing)})`,\n        marginTop: `-${getOffset(themeSpacing)}`,\n        marginLeft: `-${getOffset(themeSpacing)}`,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: getOffset(themeSpacing),\n          paddingLeft: getOffset(themeSpacing)\n        }\n      };\n    }\n  }\n\n  return styles;\n}\n\nconst overridesResolver = (props, styles) => {\n  const {\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = props.styleProps;\n  return deepmerge(_extends({}, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]), styles.root || {});\n}; // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nconst GridRoot = experimentalStyled('div', {}, {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  boxSizing: 'border-box'\n}, styleProps.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, styleProps.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, styleProps.zeroMinWidth && {\n  minWidth: 0\n}, styleProps.direction === 'column' && {\n  flexDirection: 'column',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'column-reverse' && {\n  flexDirection: 'column-reverse',\n  [`& > .${gridClasses.item}`]: {\n    maxWidth: 'none'\n  }\n}, styleProps.direction === 'row-reverse' && {\n  flexDirection: 'row-reverse'\n}, styleProps.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, styleProps.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateGap, ({\n  theme,\n  styleProps\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = styleProps;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  const styleProps = _extends({}, props, {\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;"]},"metadata":{},"sourceType":"module"}