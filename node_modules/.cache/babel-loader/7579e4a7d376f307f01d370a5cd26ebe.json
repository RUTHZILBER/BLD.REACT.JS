{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isHostComponent } from '@material-ui/unstyled';\nimport { deepmerge, elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ModalUnstyled, { modalUnstyledClasses } from '@material-ui/unstyled/ModalUnstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Backdrop from '../Backdrop';\nexport const modalClasses = modalUnstyledClasses;\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, !styleProps.open && styleProps.exited && styles.hidden), styles.root || {});\n};\n\nconst extendUtilityClasses = styleProps => {\n  return styleProps.classes;\n};\n\nconst ModalRoot = experimentalStyled('div', {}, {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  position: 'fixed',\n  zIndex: theme.zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !styleProps.open && styleProps.exited && {\n  visibility: 'hidden'\n}));\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var _componentsProps$root;\n\n  const props = useThemeProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n\n  const {\n    BackdropComponent = Backdrop,\n    closeAfterTransition = false,\n    children,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropComponent\", \"closeAfterTransition\", \"children\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\"]);\n\n  const [exited, setExited] = React.useState(true);\n  const commonProps = {\n    BackdropComponent,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted,\n    // private\n    onTransitionEnter: () => setExited(false),\n    onTransitionExited: () => setExited(true)\n  };\n\n  const styleProps = _extends({}, props, commonProps, {\n    exited\n  });\n\n  const classes = extendUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(ModalUnstyled, _extends({\n    components: _extends({\n      Root: ModalRoot\n    }, components),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, (!components.Root || !isHostComponent(components.Root)) && {\n        styleProps: _extends({}, (_componentsProps$root = componentsProps.root) === null || _componentsProps$root === void 0 ? void 0 : _componentsProps$root.styleProps)\n      })\n    },\n    ref: ref\n  }, other, {\n    classes: classes\n  }, commonProps), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default Backdrop\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["C:/git/BLD.REACT.JS/node_modules/@material-ui/core/Modal/Modal.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","isHostComponent","deepmerge","elementAcceptingRef","HTMLElementType","ModalUnstyled","modalUnstyledClasses","experimentalStyled","useThemeProps","Backdrop","modalClasses","overridesResolver","props","styles","styleProps","open","exited","hidden","root","extendUtilityClasses","classes","ModalRoot","name","slot","theme","position","zIndex","modal","right","bottom","top","left","visibility","Modal","forwardRef","inProps","ref","_componentsProps$root","BackdropComponent","closeAfterTransition","children","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","other","setExited","useState","commonProps","onTransitionEnter","onTransitionExited","createElement","Root","process","env","NODE_ENV","propTypes","elementType","BackdropProps","object","isRequired","bool","shape","container","oneOfType","func","onBackdropClick","onClose","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isHostComponent } from '@material-ui/unstyled';\nimport { deepmerge, elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ModalUnstyled, { modalUnstyledClasses } from '@material-ui/unstyled/ModalUnstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Backdrop from '../Backdrop';\nexport const modalClasses = modalUnstyledClasses;\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, !styleProps.open && styleProps.exited && styles.hidden), styles.root || {});\n};\n\nconst extendUtilityClasses = styleProps => {\n  return styleProps.classes;\n};\n\nconst ModalRoot = experimentalStyled('div', {}, {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  position: 'fixed',\n  zIndex: theme.zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !styleProps.open && styleProps.exited && {\n  visibility: 'hidden'\n}));\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var _componentsProps$root;\n\n  const props = useThemeProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n\n  const {\n    BackdropComponent = Backdrop,\n    closeAfterTransition = false,\n    children,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropComponent\", \"closeAfterTransition\", \"children\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\"]);\n\n  const [exited, setExited] = React.useState(true);\n  const commonProps = {\n    BackdropComponent,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted,\n    // private\n    onTransitionEnter: () => setExited(false),\n    onTransitionExited: () => setExited(true)\n  };\n\n  const styleProps = _extends({}, props, commonProps, {\n    exited\n  });\n\n  const classes = extendUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(ModalUnstyled, _extends({\n    components: _extends({\n      Root: ModalRoot\n    }, components),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, (!components.Root || !isHostComponent(components.Root)) && {\n        styleProps: _extends({}, (_componentsProps$root = componentsProps.root) === null || _componentsProps$root === void 0 ? void 0 : _componentsProps$root.styleProps)\n      })\n    },\n    ref: ref\n  }, other, {\n    classes: classes\n  }, commonProps), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default Backdrop\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}