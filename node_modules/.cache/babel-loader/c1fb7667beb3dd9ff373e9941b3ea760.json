{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useTheme from '../styles/useTheme';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nconst NotchedOutlineRoot = experimentalStyled('fieldset')({\n  textAlign: 'left',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: '0 8px',\n  pointerEvents: 'none',\n  borderRadius: 'inherit',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  overflow: 'hidden',\n  minWidth: '0%'\n});\nconst NotchedOutlineLegend = experimentalStyled('legend')(({\n  styleProps,\n  theme\n}) => _extends({}, styleProps.label === undefined && {\n  padding: 0,\n  lineHeight: '11px',\n  // sync with `height` in `legend` styles\n  transition: theme.transitions.create('width', {\n    duration: 150,\n    easing: theme.transitions.easing.easeOut\n  })\n}, styleProps.label !== undefined && _extends({\n  display: 'block',\n  width: 'auto',\n  padding: 0,\n  height: 11,\n  // sync with `lineHeight` in `legend` styles\n  fontSize: '0.75em',\n  visibility: 'hidden',\n  maxWidth: 0.01,\n  transition: theme.transitions.create('max-width', {\n    duration: 50,\n    easing: theme.transitions.easing.easeOut\n  }),\n  '& > span': {\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: 'inline-block'\n  }\n}, styleProps.notched && {\n  maxWidth: '100%',\n  transition: theme.transitions.create('max-width', {\n    duration: 100,\n    easing: theme.transitions.easing.easeOut,\n    delay: 50\n  })\n})));\n/**\n * @ignore - internal component.\n */\n\nexport default function NotchedOutline(props) {\n  const {\n    className,\n    label,\n    labelWidth: labelWidthProp,\n    notched,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"label\", \"labelWidth\", \"notched\", \"style\"]);\n\n  const theme = useTheme();\n  const align = theme.direction === 'rtl' ? 'right' : 'left';\n\n  const styleProps = _extends({}, props, {\n    notched,\n    label\n  });\n\n  if (label !== undefined) {\n    return /*#__PURE__*/React.createElement(NotchedOutlineRoot, _extends({\n      \"aria-hidden\": true,\n      className: className,\n      style: style,\n      styleProps: styleProps\n    }, other), /*#__PURE__*/React.createElement(NotchedOutlineLegend, {\n      styleProps: styleProps\n    }, label ? /*#__PURE__*/React.createElement(\"span\", null, label) :\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    React.createElement(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    })));\n  }\n\n  const labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01; // TODO remove this branch\n\n  return /*#__PURE__*/React.createElement(NotchedOutlineRoot, _extends({\n    \"aria-hidden\": true,\n    style: _extends({\n      [`padding${capitalize(align)}`]: 8\n    }, style),\n    className: className,\n    styleProps: styleProps\n  }, other), /*#__PURE__*/React.createElement(NotchedOutlineLegend, {\n    styleProps: styleProps,\n    style: {\n      // IE11: fieldset with legend does not render\n      // a border radius. This maintains consistency\n      // by always having a legend rendered\n      width: notched ? labelWidth : 0.01\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"notranslate\",\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  })));\n}\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The width of the label.\n   */\n  labelWidth: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;","map":{"version":3,"sources":["C:/git/BLD.REACT.JS/node_modules/@material-ui/core/OutlinedInput/NotchedOutline.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","useTheme","capitalize","experimentalStyled","NotchedOutlineRoot","textAlign","position","bottom","right","top","left","margin","padding","pointerEvents","borderRadius","borderStyle","borderWidth","overflow","minWidth","NotchedOutlineLegend","styleProps","theme","label","undefined","lineHeight","transition","transitions","create","duration","easing","easeOut","display","width","height","fontSize","visibility","maxWidth","paddingLeft","paddingRight","notched","delay","NotchedOutline","props","className","labelWidth","labelWidthProp","style","other","align","direction","createElement","dangerouslySetInnerHTML","__html","process","env","NODE_ENV","propTypes","children","node","classes","object","string","number","isRequired","bool"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useTheme from '../styles/useTheme';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nconst NotchedOutlineRoot = experimentalStyled('fieldset')({\n  textAlign: 'left',\n  position: 'absolute',\n  bottom: 0,\n  right: 0,\n  top: -5,\n  left: 0,\n  margin: 0,\n  padding: '0 8px',\n  pointerEvents: 'none',\n  borderRadius: 'inherit',\n  borderStyle: 'solid',\n  borderWidth: 1,\n  overflow: 'hidden',\n  minWidth: '0%'\n});\nconst NotchedOutlineLegend = experimentalStyled('legend')(({\n  styleProps,\n  theme\n}) => _extends({}, styleProps.label === undefined && {\n  padding: 0,\n  lineHeight: '11px',\n  // sync with `height` in `legend` styles\n  transition: theme.transitions.create('width', {\n    duration: 150,\n    easing: theme.transitions.easing.easeOut\n  })\n}, styleProps.label !== undefined && _extends({\n  display: 'block',\n  width: 'auto',\n  padding: 0,\n  height: 11,\n  // sync with `lineHeight` in `legend` styles\n  fontSize: '0.75em',\n  visibility: 'hidden',\n  maxWidth: 0.01,\n  transition: theme.transitions.create('max-width', {\n    duration: 50,\n    easing: theme.transitions.easing.easeOut\n  }),\n  '& > span': {\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: 'inline-block'\n  }\n}, styleProps.notched && {\n  maxWidth: '100%',\n  transition: theme.transitions.create('max-width', {\n    duration: 100,\n    easing: theme.transitions.easing.easeOut,\n    delay: 50\n  })\n})));\n/**\n * @ignore - internal component.\n */\n\nexport default function NotchedOutline(props) {\n  const {\n    className,\n    label,\n    labelWidth: labelWidthProp,\n    notched,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"label\", \"labelWidth\", \"notched\", \"style\"]);\n\n  const theme = useTheme();\n  const align = theme.direction === 'rtl' ? 'right' : 'left';\n\n  const styleProps = _extends({}, props, {\n    notched,\n    label\n  });\n\n  if (label !== undefined) {\n    return /*#__PURE__*/React.createElement(NotchedOutlineRoot, _extends({\n      \"aria-hidden\": true,\n      className: className,\n      style: style,\n      styleProps: styleProps\n    }, other), /*#__PURE__*/React.createElement(NotchedOutlineLegend, {\n      styleProps: styleProps\n    }, label ? /*#__PURE__*/React.createElement(\"span\", null, label) :\n    /*#__PURE__*/\n    // notranslate needed while Google Translate will not fix zero-width space issue\n    // eslint-disable-next-line react/no-danger\n    React.createElement(\"span\", {\n      className: \"notranslate\",\n      dangerouslySetInnerHTML: {\n        __html: '&#8203;'\n      }\n    })));\n  }\n\n  const labelWidth = labelWidthProp > 0 ? labelWidthProp * 0.75 + 8 : 0.01; // TODO remove this branch\n\n  return /*#__PURE__*/React.createElement(NotchedOutlineRoot, _extends({\n    \"aria-hidden\": true,\n    style: _extends({\n      [`padding${capitalize(align)}`]: 8\n    }, style),\n    className: className,\n    styleProps: styleProps\n  }, other), /*#__PURE__*/React.createElement(NotchedOutlineLegend, {\n    styleProps: styleProps,\n    style: {\n      // IE11: fieldset with legend does not render\n      // a border radius. This maintains consistency\n      // by always having a legend rendered\n      width: notched ? labelWidth : 0.01\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"notranslate\",\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  })));\n}\nprocess.env.NODE_ENV !== \"production\" ? NotchedOutline.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The width of the label.\n   */\n  labelWidth: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the outline is notched to accommodate the label.\n   */\n  notched: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;"]},"metadata":{},"sourceType":"module"}